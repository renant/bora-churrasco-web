{"version":3,"file":"PresentationTool-HDaNb3vI.cjs","sources":["../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js","../../../channels/src/constants.ts","../../../channels/src/helpers.ts","../../../channels/src/controller.ts","../../../visual-editing-helpers/dist/_chunks/urlStringToPath-FefM00gz.js","../../../visual-editing-helpers/dist/index.js","../../src/components/ErrorCard.tsx","../../src/usePresentationTool.ts","../../src/editor/PresentationPaneRouterProvider.tsx","../../src/editor/DocumentListPane.tsx","../../src/editor/DocumentListPanel.tsx","../../src/editor/DocumentPane.tsx","../../src/editor/DocumentPanel.tsx","../../src/editor/ContentEditor.tsx","../../../visual-editing-helpers/dist/hooks.js","../../src/loader/context.tsx","../../src/loader/turboChargeResultIfSourceMap.tsx","../../src/loader/utils.ts","../../src/loader/LiveStoreProvider.tsx","../../src/loader/useLiveQuery.ts","../../src/loader/LoaderQueries.tsx","../../src/panels/PanelsContext.tsx","../../src/panels/Panel.tsx","../../src/panels/PanelResizer.tsx","../../src/panels/usePanelId.ts","../../src/lib/debounce.ts","../../src/panels/usePanelsStorage.ts","../../src/panels/util.ts","../../src/panels/Panels.tsx","../../src/perf/HoldEditState.tsx","../../src/PresentationNavigateProvider.tsx","../../src/PresentationParamsProvider.tsx","../../src/PresentationProvider.tsx","../../src/preview/IFrame.tsx","../../src/preview/PreviewLocationInput.tsx","../../src/preview/PreviewFrame.tsx","../../src/lib/parse.ts","../../src/useParams.ts","../../src/usePreviewUrl.ts","../../src/PresentationTool.tsx","../../src/useDocumentsOnPage.ts","../../src/useLocalState.ts"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import type { ChannelMsgType } from './types'\n\nexport const RESPONSE_TIMEOUT = 1000\nexport const HEARTBEAT_INTERVAL = 1000\nexport const HANDSHAKE_INTERVAL = 500\n\nexport const INTERNAL_MSG_TYPES = [\n  'channel/disconnect',\n  'channel/response',\n  'channel/heartbeat',\n] satisfies ChannelMsgType[]\n\nexport const HANDSHAKE_MSG_TYPES = [\n  'handshake/syn',\n  'handshake/syn-ack',\n  'handshake/ack',\n] satisfies ChannelMsgType[]\n","import { HANDSHAKE_MSG_TYPES, INTERNAL_MSG_TYPES } from './constants'\nimport { ChannelMsgType, HandshakeMsgType, InternalMsgType } from './types'\n\nexport const isInternalMessage = (\n  type: ChannelMsgType | InternalMsgType,\n): type is InternalMsgType => {\n  return INTERNAL_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isHandshakeMessage = (\n  type: ChannelMsgType | InternalMsgType,\n): type is HandshakeMsgType => {\n  return HANDSHAKE_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isLegacyHandshakeMessage = ({\n  data = {},\n}: MessageEvent): boolean => {\n  return (\n    // Check data is a record type\n    typeof data === 'object' &&\n    data !== null &&\n    !Array.isArray(data) &&\n    // The \"domain\" key was introduced in commit 4854e7f\n    !('domain' in data) &&\n    // Check the rest of the object shape is present\n    ['id', 'type', 'from', 'to'].every((key) => key in data) &&\n    // Prior to 4854e7f only handshake events were emitted prior to an established connection\n    data.type.startsWith('handshake/')\n  )\n}\n","import { v4 as uuid } from 'uuid'\n\nimport {\n  HANDSHAKE_INTERVAL,\n  HEARTBEAT_INTERVAL,\n  RESPONSE_TIMEOUT,\n} from './constants'\nimport { isHandshakeMessage, isLegacyHandshakeMessage } from './helpers'\nimport type {\n  ChannelMsg,\n  ChannelsController,\n  ChannelsControllerChannel,\n  ChannelsControllerOptions,\n  ChannelStatus,\n  InternalMsgType,\n  ProtocolMsg,\n  ToArgs,\n} from './types'\n\nexport function createChannelsController<T extends ChannelMsg>(\n  config: ChannelsControllerOptions<T>,\n): ChannelsController {\n  const iframe = config.frame.contentWindow\n\n  const channels: ChannelsControllerChannel<T>[] = config.connectTo.map(\n    (config) => ({\n      buffer: [],\n      config,\n      id: '',\n      handler: handshakeHandler,\n      status: 'connecting',\n      interval: undefined,\n      heartbeat: undefined,\n    }),\n  )\n\n  function startHandshake(channel: ChannelsControllerChannel<T>) {\n    channel.id = uuid()\n    channel.interval = window.setInterval(() => {\n      sendHandshake(channel, 'handshake/syn', { id: channel.id })\n    }, HANDSHAKE_INTERVAL)\n  }\n\n  function stopHandshake(channel: ChannelsControllerChannel<T>) {\n    window.clearInterval(channel.interval)\n  }\n\n  function isValidMessageEvent(\n    e: MessageEvent,\n  ): e is MessageEvent<ProtocolMsg<T>> {\n    const { data, origin } = e\n    return (\n      data.domain === 'sanity/channels' &&\n      data.to == config.id &&\n      channels.map((channel) => channel.config.id).includes(data.from) &&\n      data.type !== 'channel/response' &&\n      origin === config.frameOrigin\n    )\n  }\n\n  function handshakeHandler(e: MessageEvent<ProtocolMsg<T>>) {\n    const { data } = e\n    if (isHandshakeMessage(data.type)) {\n      const channel = channels.find(\n        (channel) => channel.config.id === data.from,\n      )\n      if (channel && data.type === 'handshake/syn-ack') {\n        setChannelStatus(channel, 'connected')\n        sendHandshake(channel, 'handshake/ack', { id: channel.id })\n      }\n    }\n  }\n\n  const messageHandler = (e: MessageEvent<ProtocolMsg<T>>) => {\n    const { data } = e\n    if (\n      !isHandshakeMessage(data.type) &&\n      channels.find((channel) => channel.id === data.connectionId)\n    ) {\n      const channel = channels.find(\n        (channel) => channel.config.id === data.from,\n      )\n      if (channel) {\n        // eslint-disable-next-line no-warning-comments\n        // @todo Ugly type casting\n        const args = [data.type, data.data] as ToArgs<T>\n        channel.config.onEvent?.(...args)\n        config.onEvent?.(...args)\n        send(channel, 'channel/response', { responseTo: data.id }, false)\n      }\n    }\n  }\n\n  function handleEvents(e: MessageEvent<ProtocolMsg<T>>) {\n    if (isLegacyHandshakeMessage(e)) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Visual editing package mismatch detected! Please ensure you are using the latest version of Sanity Studio and any packages listed here:\\nhttps://github.com/sanity-io/visual-editing',\n      )\n      return\n    }\n\n    if (isValidMessageEvent(e)) {\n      const { data } = e\n      channels.find((channel) => channel.config.id === data.from)?.handler(e)\n    }\n  }\n\n  function flush(channel: ChannelsControllerChannel<T>) {\n    const toFlush = [...channel.buffer]\n    channel.buffer.splice(0, channel.buffer.length)\n    toFlush.forEach(({ type, data }) => {\n      send(channel, type, data)\n    })\n  }\n\n  function startHeartbeat(channel: ChannelsControllerChannel<T>) {\n    stopHeartbeat(channel)\n    if (channel.config.heartbeat) {\n      const heartbeatInverval =\n        typeof channel.config.heartbeat === 'number'\n          ? channel.config.heartbeat\n          : HEARTBEAT_INTERVAL\n      channel.heartbeat = window.setInterval(() => {\n        send(channel, 'channel/heartbeat')\n      }, heartbeatInverval)\n    }\n  }\n\n  function stopHeartbeat(channel: ChannelsControllerChannel<T>) {\n    if (channel.heartbeat) {\n      window.clearInterval(channel.heartbeat)\n    }\n  }\n\n  function setChannelStatus(\n    channel: ChannelsControllerChannel<T>,\n    next: ChannelStatus,\n  ) {\n    channel.status = next\n    channel.config.onStatusUpdate?.(next, channel.config.id)\n    config.onStatusUpdate?.(next, channel.config.id)\n    if (next === 'connecting' || next === 'reconnecting') {\n      channel.handler = handshakeHandler\n      stopHeartbeat(channel)\n      startHandshake(channel)\n    } else if (next === 'connected') {\n      channel.handler = messageHandler\n      stopHandshake(channel)\n      startHeartbeat(channel)\n      flush(channel)\n    } else if (next === 'disconnected') {\n      channel.id = null\n      channel.handler = handshakeHandler\n      stopHandshake(channel)\n      stopHeartbeat(channel)\n    }\n  }\n\n  function sendHandshake<K extends T['type']>(\n    channel: ChannelsControllerChannel<T>,\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    if (!channel.id) {\n      throw new Error('No channel ID set')\n    }\n\n    const msg: ProtocolMsg<T> = {\n      connectionId: channel.id,\n      data,\n      domain: 'sanity/channels',\n      from: config.id,\n      id: uuid(),\n      to: channel.config.id,\n      type,\n    }\n\n    try {\n      iframe?.postMessage(msg, { targetOrigin: '*' })\n    } catch (e) {\n      throw new Error(`Failed to postMessage '${msg.id}' on '${config.id}'`)\n    }\n  }\n\n  function send<K extends T['type']>(\n    channel: ChannelsControllerChannel<T>,\n    type: K | InternalMsgType,\n    data?: Extract<T, { type: K }>['data'],\n    expectResponse = true,\n  ) {\n    const id = uuid()\n\n    // If there is no active channel, push to the buffer\n    if (\n      channel.status === 'connecting' ||\n      channel.status === 'reconnecting' ||\n      channel.status === 'disconnected'\n    ) {\n      channel.buffer.push({ type, data })\n      return\n    }\n\n    if (!channel.id) {\n      throw new Error('No channel ID set')\n    }\n\n    const msg: ProtocolMsg<T> = {\n      connectionId: channel.id,\n      data,\n      domain: 'sanity/channels',\n      from: config.id,\n      id,\n      to: channel.config.id,\n      type,\n    }\n\n    if (expectResponse) {\n      const maxWait = setTimeout(() => {\n        // The channel may have changed, so only reject if the IDs match\n        if (msg.connectionId === channel.id) {\n          // Cleanup the transaction listener\n          window.removeEventListener('message', transact, false)\n          // Push the message to the buffer\n          if (type !== 'channel/heartbeat') {\n            channel.buffer.push({ type, data })\n          }\n          // Try to reconnect\n          setChannelStatus(channel, 'reconnecting')\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Received no response to message '${msg.type}' on client '${config.id}' (ID: '${msg.id}').`,\n          )\n        }\n      }, RESPONSE_TIMEOUT)\n\n      const transact = (e: MessageEvent<ChannelMsg>) => {\n        const { data: eventData } = e\n        if (\n          eventData.type === 'channel/response' &&\n          eventData.data?.responseTo &&\n          eventData.data.responseTo === msg.id\n        ) {\n          window.removeEventListener('message', transact, false)\n          clearTimeout(maxWait)\n        }\n      }\n      window.addEventListener('message', transact, false)\n    }\n\n    try {\n      iframe?.postMessage(msg, { targetOrigin: config.frameOrigin })\n    } catch (e) {\n      throw new Error(\n        `Failed to postMessage '${msg.id}' on client '${config.id}'`,\n      )\n    }\n  }\n\n  function disconnect() {\n    channels.forEach((channel) => {\n      if (['disconnected'].includes(channel.status)) return\n      send(channel, 'channel/disconnect', { id: channel.id }, false)\n      setChannelStatus(channel, 'disconnected')\n    })\n  }\n\n  function destroy() {\n    disconnect()\n    window.removeEventListener('message', handleEvents, false)\n    channels.forEach((channel) => {\n      stopHeartbeat(channel)\n      stopHandshake(channel)\n    })\n  }\n\n  function initialise() {\n    window.addEventListener('message', handleEvents, false)\n    channels.forEach((channel) => {\n      setChannelStatus(channel, 'connecting')\n    })\n  }\n\n  initialise()\n\n  function sendPublic<K extends T['type']>(\n    id: string | string[] | undefined,\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    const channelsToSend = id ? (Array.isArray(id) ? [...id] : [id]) : channels\n\n    channelsToSend.forEach((id) => {\n      const channel = channels.find((channel) => channel.config.id === id)\n      if (!channel) throw new Error('Invalid channel ID')\n      send(channel, type, data)\n    })\n  }\n\n  return {\n    destroy,\n    send: sendPublic,\n  }\n}\n","function n(n){return\"object\"==typeof n&&null!==n&&!Array.isArray(n)}function e(n){return null!==n&&Array.isArray(n)}function t(n){let t=\"\";for(const r of n)\"string\"!=typeof r?\"number\"!=typeof r?e(r)?(t&&(t+=\":\"),t+=`${r.join(\",\")}}`):r._key&&(t&&(t+=\":\"),t+=`${r._key}`):(t&&(t+=\":\"),t+=`${r}`):(t&&(t+=\".\"),t+=r);return t}const r=/^([A-Za-z]+):([0-9]+)$/,o=/^([A-Za-z]+):([0-9]+),([0-9]+)$/,u=/^([A-Za-z]+):([a-z0-9]+)$/;function s(n){const e=[];for(const t of n.split(\".\")){const n=r.exec(t);if(n){e.push(n[1],Number(n[2]));continue}const s=o.exec(t);if(s){e.push(s[1],[Number(s[2]),Number(s[3])]);continue}const c=u.exec(t);c?e.push(c[1],{_key:c[2]}):e.push(t)}return e}export{e as a,n as i,t as p,s as u};//# sourceMappingURL=urlStringToPath-FefM00gz.js.map\n","export{p as pathToUrlString,u as urlStringToPath}from\"./_chunks/urlStringToPath-FefM00gz.js\";function t(t,r){return`${t}-${\"string\"==typeof r?r:JSON.stringify(r)}`}const r=\"undefined\"!=typeof window&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform),e={alt:\"altKey\",ctrl:\"ctrlKey\",mod:r?\"metaKey\":\"ctrlKey\",shift:\"shiftKey\"};function n(t,r){return t.every((t=>e[t]?r[e[t]]:r.key===t.toUpperCase()))}function o(t){return t.key===(r?\"Meta\":\"Ctrl\")}function i(t){return\"Alt\"===t.key}export{t as getQueryCacheKey,i as isAltKey,n as isHotkey,o as isModKey};//# sourceMappingURL=index.js.map\n","import {\n  Box,\n  Button,\n  Card,\n  CardProps,\n  Container,\n  Flex,\n  Inline,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport { ReactElement, ReactNode } from 'react'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): ReactElement {\n  const { children, message, onRetry, onContinueAnyway, ...restProps } = props\n\n  const retryButton = (\n    <Button fontSize={1} mode=\"ghost\" onClick={onRetry} text=\"Retry\" />\n  )\n  const continueAnywayButton = (\n    <Button\n      fontSize={1}\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text=\"Continue anyway\"\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                An error occured\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import { useContext } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\n\nexport function usePresentationTool(): PresentationContextValue {\n  const presentation = useContext(PresentationContext)\n\n  if (!presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","/* eslint-disable no-console */\n\nimport {\n  forwardRef,\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useMemo,\n} from 'react'\nimport { getPublishedId, useUnique } from 'sanity'\nimport {\n  BackLinkProps,\n  PaneRouterContext,\n  PaneRouterContextValue,\n  ReferenceChildLinkProps,\n} from 'sanity/desk'\nimport { StateLink, useRouter } from 'sanity/router'\n\nimport { DeskDocumentPaneParams, PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(\n  nextParams: Record<string, string | undefined>,\n) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return { ...obj, [key]: value }\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { deskParams, params } = usePresentationTool()\n\n  return (\n    <StateLink\n      {...props}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries({\n          ...deskParams,\n          preview: params.preview,\n        }),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { documentId, documentType, ...restProps } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{ id: documentId, type: documentType }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onDeskParams: (params: DeskDocumentPaneParams) => void\n    params: DeskDocumentPaneParams\n    previewUrl?: string\n    refs?: { _id: string; _type: string }[]\n  }>,\n): ReactElement {\n  const { children, params, onDeskParams, previewUrl, refs } = props\n\n  const { state: routerState, resolvePathFromState } = useRouter()\n\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] =\n    useCallback(\n      (nextParams) => {\n        const path = resolvePathFromState(routerState)\n        const qs = resolveQueryStringFromParams({\n          ...routerSearchParams,\n          ...nextParams,\n        })\n        return `${path}${qs}`\n      },\n      [resolvePathFromState, routerSearchParams, routerState],\n    )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      params: params as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const { childId, ...restProps } = childLinkProps\n        const ref = refs?.find((r) => getPublishedId(r._id) === childId)\n\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: ref._id,\n                type: ref._type,\n                _searchParams: Object.entries({ preview: previewUrl }),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink,\n      ReferenceChildLink,\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        onDeskParams({\n          ...nextParams,\n          // eslint-disable-next-line no-warning-comments\n          // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n          inspect: nextParams.inspect ?? undefined,\n        } as DeskDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onDeskParams, params, previewUrl, refs])\n\n  return (\n    <PaneRouterContext.Provider value={context}>\n      {children}\n    </PaneRouterContext.Provider>\n  )\n}\n","import { Card, Code, ErrorBoundary, Flex, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport {\n  DeskToolProvider,\n  DocumentListPane as DeskDocumentListPane,\n  PaneLayout,\n  PaneNode,\n} from 'sanity/desk'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n  const { devMode } = usePresentationTool()\n\n  const pane: Extract<PaneNode, { type: 'documentList' }> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: { ids: refs.map((r) => r._id) },\n      },\n      schemaTypeName: '',\n      title: 'Documents on this page',\n      type: 'documentList',\n    }),\n    [refs],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const deskParams = useMemo(() => ({}), [])\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document list\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <DeskToolProvider>\n          <PresentationPaneRouterProvider\n            params={deskParams}\n            onDeskParams={onDeskParams}\n            previewUrl={previewUrl}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <DeskDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </DeskToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import { ReactElement } from 'react'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPane } from './DocumentListPane'\n\nexport function DocumentListPanel(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n\n  return (\n    <DocumentListPane\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refs}\n    />\n  )\n}\n","import { Card, Code, ErrorBoundary, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { Path } from 'sanity'\nimport {\n  DocumentPane as DeskDocumentPane,\n  DocumentPaneNode,\n  PaneLayout,\n  useDeskTool,\n} from 'sanity/desk'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  params: DeskDocumentPaneParams\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n}): ReactElement {\n  const { documentId, documentType, params, onDeskParams, onFocusPath } = props\n  const { devMode } = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, params])\n\n  const { setLayoutCollapsed } = useDeskTool()\n  const handleRootCollapse = useCallback(\n    () => setLayoutCollapsed(true),\n    [setLayoutCollapsed],\n  )\n  const handleRootExpand = useCallback(\n    () => setLayoutCollapsed(false),\n    [setLayoutCollapsed],\n  )\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document editor\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout\n        style={{ height: '100%' }}\n        onExpand={handleRootExpand}\n        onCollapse={handleRootCollapse}\n      >\n        <PresentationPaneRouterProvider\n          onDeskParams={onDeskParams}\n          params={params}\n        >\n          <DeskDocumentPane\n            paneKey=\"document\"\n            index={1}\n            itemId=\"document\"\n            pane={paneDocumentNode}\n            onFocusPath={onFocusPath}\n          />\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import { ReactElement, useCallback, useEffect } from 'react'\nimport { Path, SanityDocument, useEditState } from 'sanity'\nimport { DeskToolProvider } from 'sanity/desk'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentPane } from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId: string\n  documentType: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (documentId: string, path: Path) => void\n  onDocumentChange: (document: SanityDocument | null) => void\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    onDocumentChange,\n  } = props\n\n  const editState = useEditState(documentId, documentType)\n  const documentValue = editState.draft || editState.published\n\n  // Sync changes to the document being edited back up to the live loaders\n  useEffect(\n    () => onDocumentChange(documentValue),\n    [documentValue, onDocumentChange],\n  )\n\n  const handleFocusPath = useCallback(\n    (path: Path) => {\n      if (documentValue?._id) {\n        onFocusPath(documentValue._id, path)\n      }\n    },\n    [documentValue, onFocusPath],\n  )\n\n  return (\n    <DeskToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        params={deskParams}\n        onDeskParams={onDeskParams}\n        onFocusPath={handleFocusPath}\n      />\n    </DeskToolProvider>\n  )\n}\n","import { ReactElement } from 'react'\nimport { Path, SanityDocument } from 'sanity'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPanel } from './DocumentListPanel'\nimport { DocumentPanel } from './DocumentPanel'\n\nexport function ContentEditor(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId?: string\n  documentType?: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (documentId: string, path: Path) => void\n  onDocumentChange: (document: SanityDocument | null) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    onDocumentChange,\n    previewUrl,\n    refs,\n  } = props\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        deskParams={deskParams}\n        documentId={documentId}\n        documentType={documentType}\n        onDeskParams={onDeskParams}\n        onFocusPath={onFocusPath}\n        onDocumentChange={onDocumentChange}\n      />\n    )\n  }\n\n  return (\n    <DocumentListPanel\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refs}\n    />\n  )\n}\n","import{useMemo as e,useState as n,useCallback as t,useEffect as i,useSyncExternalStore as r}from\"react\";function o(n){const t=e((()=>JSON.stringify(n||{})),[n]);return e((()=>JSON.parse(t)),[t])}function s(e){const{refreshInterval:o}=e,s=function(){const[e,t]=n(!1);i((()=>{t(navigator.onLine);const e=()=>t(!0),n=()=>t(!1);return window.addEventListener(\"online\",e),window.addEventListener(\"offline\",n),()=>{window.removeEventListener(\"online\",e),window.removeEventListener(\"offline\",n)}}),[]);const o=r(u,(()=>document.visibilityState),(()=>\"hidden\"));if(!e)return!0;if(\"hidden\"===o)return!0;return!1}(),[d,c]=n(\"hit\"),f=t((()=>(c(\"inflight\"),()=>c(\"hit\"))),[]);return i((()=>{if(!o||\"hit\"!==d)return;const e=setTimeout((()=>c(\"stale\")),o);return()=>clearTimeout(e)}),[o,d]),i((()=>{if(\"hit\"!==d)return;const e=()=>c(\"stale\");return window.addEventListener(\"focus\",e),()=>window.removeEventListener(\"focus\",e)}),[o,d]),i((()=>{s&&\"hit\"===d&&c(\"stale\"),s||\"stale\"!==d||c(\"refresh\")}),[s,d]),[d,f]}function u(e){return document.addEventListener(\"visibilitychange\",e),()=>document.removeEventListener(\"visibilitychange\",e)}export{o as useQueryParams,s as useRevalidate};//# sourceMappingURL=hooks.js.map\n","import { createContext } from 'react'\n\nimport { DefineListenerContext } from './types'\nimport { QueryCacheKey } from './utils'\n\n/**\n * @internal\n */\nexport const defineListenerContext =\n  createContext<DefineListenerContext | null>(null)\n\n/**\n * If it's `null` then the listener should be treated as `success`, otherwise if a listener isn't in the array it should be considered as `loading`\n * @internal\n */\nexport const LoadedListenersContext = createContext<QueryCacheKey[] | null>(\n  null,\n)\n\n/**\n * Aids in debugging, notifying if the parent has a GroqStoreProvider, or a LiveStoreProvider, and is thus `live`.\n * This is helpful as the `useLiveQuery` hook itself works even if no provider is present, but it will not be `live`.\n * @internal\n */\nexport const IsEnabledContext = createContext<boolean>(false)\n","import type {\n  ClientPerspective,\n  ContentSourceMap,\n  SanityDocument,\n} from '@sanity/client'\nimport { applySourceDocuments } from '@sanity/client/csm'\nimport {\n  unstable__documentsCache,\n  unstable__getDocumentCacheKey,\n} from '@sanity/groq-store'\n\nlet warnedAboutCrossDatasetReference = false\n\nexport function turboChargeResultIfSourceMap(\n  liveDocument: SanityDocument | null,\n  projectId: string,\n  dataset: string,\n  result: unknown,\n  perspective: ClientPerspective,\n  resultSourceMap?: ContentSourceMap,\n): any {\n  if (perspective === 'raw') {\n    throw new Error(\n      'turboChargeResultIfSourceMap does not support raw perspective',\n    )\n  }\n  return applySourceDocuments(result, resultSourceMap, (sourceDocument) => {\n    if (sourceDocument._projectId) {\n      // @TODO Handle cross dataset references\n      if (!warnedAboutCrossDatasetReference) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Cross dataset references are not supported yet, ignoring source document',\n          sourceDocument,\n        )\n        warnedAboutCrossDatasetReference = true\n      }\n      return undefined\n    }\n    // If the draft matches, use that as it's the most up to date\n    if (\n      liveDocument?._id === sourceDocument._id &&\n      liveDocument?._type === sourceDocument._type\n    ) {\n      return liveDocument\n    }\n    // Fallback to general documents cache\n    const key = unstable__getDocumentCacheKey(\n      { projectId, dataset, perspective },\n      sourceDocument,\n    )\n    return unstable__documentsCache.get(key)\n  })\n}\n","import type { ClientPerspective, QueryParams } from '@sanity/client'\n\n/**\n * @internal\n */\nexport type QueryCacheKey = `${ClientPerspective}-${string}-${string}`\n/**\n * @internal\n */\nexport function getQueryCacheKey(\n  perspective: ClientPerspective,\n  query: string,\n  params: QueryParams,\n): QueryCacheKey {\n  return `${perspective}-${query}-${JSON.stringify(params)}`\n}\n","import type {\n  ClientConfig,\n  ClientPerspective,\n  ContentSourceMap,\n  QueryParams,\n  SanityClient,\n  SanityDocument,\n} from '@sanity/client'\nimport {\n  DocumentCachePerspective,\n  unstable__documentsCache,\n  unstable__getDocumentCacheKey,\n} from '@sanity/groq-store'\nimport { useRevalidate } from '@sanity/visual-editing-helpers/hooks'\nimport { applyPatch } from 'mendoza'\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react'\n\nimport { defineListenerContext as Context, IsEnabledContext } from './context'\nimport { turboChargeResultIfSourceMap } from './turboChargeResultIfSourceMap'\nimport type {\n  DefineListenerContext,\n  ListenerGetSnapshot,\n  ListenerSubscribe,\n  Logger,\n} from './types'\nimport { getQueryCacheKey, type QueryCacheKey } from './utils'\n\nexport type { Logger }\n\n/**\n * @internal\n */\nexport interface LiveStoreProviderProps {\n  children: React.ReactNode\n  /**\n   * The Sanity client to use for fetching data and listening to mutations.\n   */\n  client: SanityClient\n  /**\n   * How frequently queries should be refetched in the background to refresh the parts of queries that can't be source mapped.\n   * Setting it to `0` will disable background refresh.\n   * @defaultValue 10000\n   */\n  refreshInterval?: number\n  perspective: ClientPerspective\n  liveDocument: SanityDocument | null\n}\n/**\n * @internal\n */\nconst LiveStoreProvider = memo(function LiveStoreProvider(\n  props: LiveStoreProviderProps,\n) {\n  const {\n    liveDocument,\n    children,\n    client,\n    refreshInterval = 2000,\n    perspective,\n  } = props\n  if (perspective === 'raw') {\n    throw new Error('LiveStoreProvider does not support the raw perspective')\n  }\n\n  const [subscriptions, setSubscriptions] = useState<QueryCacheKey[]>([])\n  const [snapshots] = useState<QuerySnapshotsCache>(() => new Map())\n  const hooks = useHooks(setSubscriptions)\n  const [context] = useState<DefineListenerContext>(() => {\n    return function defineListener<QueryResult>(\n      initialSnapshot: QueryResult,\n      query: string,\n      params: QueryParams,\n    ) {\n      const key = getQueryCacheKey(perspective, query, params)\n\n      const subscribe: ListenerSubscribe = (onStoreChange) => {\n        const unsubscribe = hooks.subscribe(\n          key,\n          perspective,\n          query,\n          params,\n          onStoreChange,\n        )\n\n        return () => unsubscribe()\n      }\n      const getSnapshot: ListenerGetSnapshot<{\n        result: QueryResult\n        resultSourceMap?: ContentSourceMap\n      }> = () =>\n        snapshots.get(key) as unknown as {\n          result: QueryResult\n          resultSourceMap?: ContentSourceMap\n        }\n\n      return { subscribe, getSnapshot }\n    } satisfies DefineListenerContext\n  })\n  const [turboIds, setTurboIds] = useState<string[]>([])\n  const turboIdsFromSourceMap = useCallback(\n    (contentSourceMap: ContentSourceMap) => {\n      // This handler only adds ids, on each query fetch. But that's ok since <Turbo /> purges ids that are unused\n      const nextTurboIds = new Set<string>()\n      if (contentSourceMap.documents?.length) {\n        for (const { _id } of contentSourceMap.documents) {\n          // @TODO only add local ids, not remote ones\n          nextTurboIds.add(_id)\n        }\n      }\n      setTurboIds((prevTurboIds) => {\n        const mergedTurboIds = Array.from(\n          new Set([...prevTurboIds, ...nextTurboIds]),\n        )\n        if (\n          JSON.stringify(mergedTurboIds.sort()) ===\n          JSON.stringify(prevTurboIds.sort())\n        ) {\n          return prevTurboIds\n        }\n        return mergedTurboIds\n      })\n    },\n    [],\n  )\n\n  return (\n    <Context.Provider value={context}>\n      <IsEnabledContext.Provider value>{children}</IsEnabledContext.Provider>\n      <Turbo\n        liveDocument={liveDocument}\n        cache={hooks.cache}\n        client={client}\n        setTurboIds={setTurboIds}\n        snapshots={snapshots}\n        turboIds={turboIds}\n        perspective={perspective}\n      />\n      {subscriptions.map((key) => {\n        if (!hooks.cache.has(key)) return null\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const { query, params, listeners } = hooks.cache.get(key)!\n        return (\n          <QuerySubscription\n            key={key}\n            liveDocument={liveDocument}\n            client={client}\n            listeners={listeners}\n            params={params}\n            query={query}\n            refreshInterval={refreshInterval}\n            snapshots={snapshots}\n            turboIdsFromSourceMap={turboIdsFromSourceMap}\n            perspective={perspective}\n          />\n        )\n      })}\n    </Context.Provider>\n  )\n})\nLiveStoreProvider.displayName = 'LiveStoreProvider'\nexport default LiveStoreProvider\n\ninterface QuerySubscriptionProps\n  extends Required<Pick<LiveStoreProviderProps, 'client' | 'refreshInterval'>> {\n  liveDocument: SanityDocument | null\n  query: string\n  params: QueryParams\n  listeners: Set<() => void>\n  turboIdsFromSourceMap: (contentSourceMap: ContentSourceMap) => void\n  snapshots: QuerySnapshotsCache\n  perspective: ClientPerspective\n}\nconst QuerySubscription = memo(function QuerySubscription(\n  props: QuerySubscriptionProps,\n) {\n  const {\n    liveDocument,\n    client,\n    refreshInterval,\n    query,\n    params,\n    listeners,\n    snapshots,\n    turboIdsFromSourceMap,\n    perspective,\n  } = props\n  const { projectId, dataset } = useMemo(() => {\n    const { projectId, dataset } = client.config()\n    return { projectId, dataset } as Required<\n      Pick<ClientConfig, 'projectId' | 'dataset'>\n    >\n  }, [client])\n\n  // Make sure any async errors bubble up to the nearest error boundary\n  const [error, setError] = useState<unknown>(null)\n  if (error) throw error\n\n  const [revalidate, startRefresh] = useRevalidate({ refreshInterval })\n  const shouldRefetch = revalidate === 'refresh' || revalidate === 'inflight'\n  useEffect(() => {\n    if (!shouldRefetch) {\n      return\n    }\n\n    let fulfilled = false\n    const controller = new AbortController()\n    // eslint-disable-next-line no-inner-declarations\n    async function effect() {\n      const { signal } = controller\n      const { result, resultSourceMap } = await client.fetch(query, params, {\n        tag: 'presentation-loader',\n        signal,\n        perspective,\n        filterResponse: false,\n      })\n\n      if (!signal.aborted) {\n        snapshots.set(getQueryCacheKey(perspective, query, params), {\n          result: resultSourceMap\n            ? turboChargeResultIfSourceMap(\n                liveDocument,\n                projectId,\n                dataset,\n                result,\n                perspective,\n                resultSourceMap,\n              )\n            : result,\n          resultSourceMap,\n        })\n\n        if (resultSourceMap) {\n          turboIdsFromSourceMap(resultSourceMap)\n        }\n\n        // Notify listeners that snapshots are updated\n        for (const listener of listeners.values()) {\n          listener()\n        }\n        fulfilled = true\n      }\n    }\n    const onFinally = startRefresh()\n    effect()\n      .catch((error) => {\n        if (error.name !== 'AbortError') {\n          setError(error)\n        }\n      })\n      .finally(onFinally)\n    return () => {\n      if (!fulfilled) {\n        controller.abort()\n      }\n    }\n  }, [\n    liveDocument,\n    client,\n    dataset,\n    listeners,\n    params,\n    projectId,\n    query,\n    shouldRefetch,\n    snapshots,\n    startRefresh,\n    turboIdsFromSourceMap,\n    perspective,\n  ])\n\n  return null\n})\nQuerySubscription.displayName = 'QuerySubscription'\n\ntype QuerySnapshotsCache = Map<\n  QueryCacheKey,\n  { result: unknown; resultSourceMap?: ContentSourceMap }\n>\n\ntype LiveStoreQueryCacheMap = Map<\n  QueryCacheKey,\n  {\n    query: string\n    params: QueryParams\n    perspective: ClientPerspective\n    listeners: Set<() => void>\n  }\n>\n\n/**\n * Keeps track of store subscribers per cache key, in a way that's designed for useSyncExternalStore.\n * The main difference from a typical subscription state with useEffect is that `adding` and `cleanup`\n * is wholly managed by the `subscribe` function in `useSyncExternalStore`, instead of lifecycles in useEffect.\n * And since the `onStoreChange` callback, provided to `subscribe`, notifies React when to re-render,\n * there is no need to use `setState` to trigger a re-render. That's why the Map is persisted in `useState` but the state setter isn't used.\n */\nfunction useHooks(\n  setSubscriptions: React.Dispatch<React.SetStateAction<QueryCacheKey[]>>,\n): {\n  cache: LiveStoreQueryCacheMap\n  subscribe: (\n    key: QueryCacheKey,\n    perspective: ClientPerspective,\n    query: string,\n    params: QueryParams,\n    listener: () => void,\n  ) => () => void\n} {\n  const [cache] = useState<LiveStoreQueryCacheMap>(() => new Map())\n  const subscribe = useCallback(\n    (\n      key: QueryCacheKey,\n      perspective: ClientPerspective,\n      query: string,\n      params: QueryParams,\n      listener: () => void,\n    ) => {\n      if (!cache.has(key)) {\n        cache.set(key, {\n          perspective,\n          query,\n          params,\n          listeners: new Set<() => void>(),\n        })\n        setSubscriptions((prevSubscriptions) => {\n          if (prevSubscriptions.includes(key)) {\n            return prevSubscriptions\n          }\n          return [...prevSubscriptions, key]\n        })\n      }\n      const hook = cache.get(key)\n      if (!hook || !hook.listeners) {\n        throw new TypeError('Inconsistent cache for key: ' + key)\n      }\n      const { listeners } = hook\n      listeners.add(listener)\n      return () => {\n        listeners.delete(listener)\n        if (listeners.size === 0) {\n          cache.delete(key)\n          setSubscriptions((prevSubscriptions) => {\n            if (prevSubscriptions.includes(key)) {\n              return prevSubscriptions.filter((sub) => sub !== key)\n            }\n            return prevSubscriptions\n          })\n        }\n      }\n    },\n    [cache, setSubscriptions],\n  )\n  return useMemo(() => ({ cache, subscribe }), [cache, subscribe])\n}\n\ninterface TurboProps extends Pick<LiveStoreProviderProps, 'client'> {\n  liveDocument: SanityDocument | null\n  turboIds: string[]\n  setTurboIds: React.Dispatch<React.SetStateAction<string[]>>\n  cache: LiveStoreQueryCacheMap\n  snapshots: QuerySnapshotsCache\n  perspective: DocumentCachePerspective\n}\n/**\n * A turbo-charged mutation observer that uses Content Source Maps to apply mendoza patches on your queries\n */\nconst Turbo = memo(function Turbo(props: TurboProps) {\n  const {\n    liveDocument,\n    client,\n    snapshots,\n    cache,\n    turboIds,\n    setTurboIds,\n    perspective,\n  } = props\n  const { projectId, dataset } = useMemo(() => {\n    const { projectId, dataset } = client.config()\n    return { projectId, dataset } as Required<\n      Pick<ClientConfig, 'projectId' | 'dataset'>\n    >\n  }, [client])\n\n  // Keep track of document ids that the active `useLiveQuery` hooks care about\n  useEffect(() => {\n    const nextTurboIds = new Set<string>()\n    for (const { perspective, query, params } of cache.values()) {\n      const key = getQueryCacheKey(perspective, query, params)\n      const snapshot = snapshots.get(key)\n      if (snapshot && snapshot.resultSourceMap?.documents?.length) {\n        for (const { _id } of snapshot.resultSourceMap.documents) {\n          nextTurboIds.add(_id)\n        }\n      }\n    }\n    const nextTurboIdsSnapshot = [...nextTurboIds].sort()\n    if (JSON.stringify(turboIds) !== JSON.stringify(nextTurboIdsSnapshot)) {\n      setTurboIds(nextTurboIdsSnapshot)\n    }\n  }, [cache, setTurboIds, snapshots, turboIds])\n\n  // Figure out which documents are missing from the cache\n  const [batch, setBatch] = useState<string[][]>([])\n  useEffect(() => {\n    const batchSet = new Set(batch.flat())\n    const nextBatch = new Set<string>()\n    for (const turboId of turboIds) {\n      if (\n        !batchSet.has(turboId) &&\n        !unstable__documentsCache.has(\n          unstable__getDocumentCacheKey(\n            { projectId, dataset, perspective },\n            { _id: turboId },\n          ),\n        )\n      ) {\n        nextBatch.add(turboId)\n      }\n    }\n    const nextBatchSlice = [...nextBatch].slice(0, 10)\n    if (nextBatchSlice.length === 0) return\n    setBatch((prevBatch) => [...prevBatch.slice(-10), nextBatchSlice])\n  }, [batch, dataset, perspective, projectId, turboIds])\n\n  const [lastMutatedDocumentId, setLastMutatedDocumentId] = useState<string>()\n  // Use the same listen instance and patch documents as they come in\n  useEffect(() => {\n    const subscription = client\n      .listen(\n        perspective === 'published'\n          ? `*[!(_id in path(\"drafts.**\"))]`\n          : `*[_id in path(\"drafts.**\")]`,\n        {},\n        {\n          events: ['mutation'],\n          effectFormat: 'mendoza',\n          includePreviousRevision: false,\n          includeResult: false,\n          tag: 'presentation-loader',\n        },\n      )\n      .subscribe((update) => {\n        if (update.type !== 'mutation' || !update.effects?.apply?.length) return\n        // Schedule a reach state update with the ID of the document that were mutated\n        // This react handler will apply the document to related source map snapshots\n        const key = unstable__getDocumentCacheKey(\n          { projectId, dataset, perspective },\n          { _id: update.documentId },\n        )\n        const cachedDocument = unstable__documentsCache.peek(key)\n        if (cachedDocument as SanityDocument) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const patchDoc = { ...cachedDocument } as any\n          delete patchDoc._rev\n          const patchedDocument = applyPatch(patchDoc, update.effects.apply)\n          unstable__documentsCache.set(key, patchedDocument)\n        }\n\n        setLastMutatedDocumentId(update.documentId)\n      })\n    return () => subscription.unsubscribe()\n  }, [client, dataset, perspective, projectId])\n\n  // If the last mutated document is in the list over turboIds then lets apply the source map\n  useEffect(() => {\n    if (!lastMutatedDocumentId || !turboIds.includes(lastMutatedDocumentId))\n      return\n\n    const updatedKeys: QueryCacheKey[] = []\n    for (const [key, snapshot] of snapshots.entries()) {\n      if (snapshot.resultSourceMap?.documents?.length) {\n        snapshot.result = turboChargeResultIfSourceMap(\n          liveDocument,\n          projectId,\n          dataset,\n          snapshot.result,\n          perspective,\n          snapshot.resultSourceMap,\n        )\n        updatedKeys.push(key)\n      }\n    }\n    for (const updatedKey of updatedKeys) {\n      const listeners = cache.get(updatedKey)?.listeners\n      if (listeners) {\n        for (const listener of listeners) {\n          listener()\n        }\n      }\n    }\n    setLastMutatedDocumentId(undefined)\n  }, [\n    liveDocument,\n    cache,\n    dataset,\n    lastMutatedDocumentId,\n    perspective,\n    projectId,\n    snapshots,\n    turboIds,\n  ])\n\n  const [lastDraftDocumentRev, setLastDraftDocumentRev] = useState<string>()\n  useEffect(() => {\n    if (!lastDraftDocumentRev) return\n\n    const updatedKeys: QueryCacheKey[] = []\n    for (const [key, snapshot] of snapshots.entries()) {\n      if (snapshot.resultSourceMap?.documents?.length) {\n        snapshot.result = turboChargeResultIfSourceMap(\n          liveDocument,\n          projectId,\n          dataset,\n          snapshot.result,\n          perspective,\n          snapshot.resultSourceMap,\n        )\n        updatedKeys.push(key)\n      }\n    }\n    for (const updatedKey of updatedKeys) {\n      const listeners = cache.get(updatedKey)?.listeners\n      if (listeners) {\n        for (const listener of listeners) {\n          listener()\n        }\n      }\n    }\n  }, [\n    cache,\n    dataset,\n    liveDocument,\n    lastDraftDocumentRev,\n    perspective,\n    projectId,\n    snapshots,\n  ])\n  useEffect(() => {\n    if (liveDocument) {\n      setLastDraftDocumentRev(liveDocument._rev)\n    }\n  }, [liveDocument])\n\n  return (\n    <>\n      {batch.map((ids) => (\n        <GetDocuments\n          key={JSON.stringify(ids)}\n          client={client}\n          projectId={projectId}\n          dataset={dataset}\n          ids={ids}\n          perspective={perspective}\n        />\n      ))}\n    </>\n  )\n})\nTurbo.displayName = 'Turbo'\n\ninterface GetDocumentsProps extends Pick<LiveStoreProviderProps, 'client'> {\n  projectId: string\n  dataset: string\n  ids: string[]\n  perspective: DocumentCachePerspective\n}\nconst GetDocuments = memo(function GetDocuments(props: GetDocumentsProps) {\n  const { client, projectId, dataset, ids, perspective } = props\n\n  useEffect(() => {\n    const missingIds = ids.filter(\n      (id) =>\n        !unstable__documentsCache.has(\n          unstable__getDocumentCacheKey(\n            { projectId, dataset, perspective },\n            { _id: id },\n          ),\n        ),\n    )\n    if (missingIds.length === 0) return\n    client.getDocuments(missingIds).then((documents) => {\n      for (const doc of documents) {\n        if (doc && doc?._id) {\n          unstable__documentsCache.set(\n            unstable__getDocumentCacheKey(\n              { projectId, dataset, perspective },\n              doc,\n            ),\n            doc,\n          )\n        }\n      }\n      // eslint-disable-next-line no-console\n    }, console.error)\n  }, [client, dataset, ids, perspective, projectId])\n\n  return null\n})\nGetDocuments.displayName = 'GetDocuments'\n","// This is a smaller version of `useLiveQuery`, as `LiveQuery` doesn't\n// need the more advanced features `useLiveQuery`, like the `isEqual` option or the `loading` state\n\nimport type { QueryParams as ClientQueryParams } from '@sanity/client'\nimport { useQueryParams } from '@sanity/visual-editing-helpers/hooks'\nimport {\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  useSyncExternalStore,\n} from 'react'\n\nimport { defineListenerContext } from './context'\n\n// Re-export types we use that are needed externally\nexport type { ClientQueryParams }\n\n/** @public */\nexport function useLiveQuery<\n  QueryResult,\n  QueryParams extends ClientQueryParams = ClientQueryParams,\n>(\n  initialData: QueryResult,\n  query: string,\n  queryParams2?: QueryParams,\n): QueryResult {\n  const defineStore = useContext(defineListenerContext)\n  if (!defineStore) {\n    throw new Error('useLiveQuery must be used inside a <LiveQueryProvider />')\n  }\n  const queryParams = useQueryParams(queryParams2)\n  const store = useMemo(\n    () => defineStore<QueryResult>(initialData, query, queryParams),\n    [defineStore, initialData, queryParams, query],\n  )\n  // initialSnapshot might change before hydration is done, so deep cloning it on the first hook call\n  // helps ensure that we don't get a mismatch between the server and client snapshots\n  const [serverSnapshot] = useState(() => {\n    if (initialData === undefined) {\n      throw new Error(\n        `initialSnapshot can't be undefined, if you don't want an initial value use null instead`,\n      )\n    }\n    try {\n      return JSON.parse(JSON.stringify(initialData))\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        \"Failed to deep clone initialSnapshot, this is likely an error and an indication that the snapshot isn't JSON serializable\",\n        { initialSnapshot: initialData, error },\n      )\n      return initialData\n    }\n  })\n  const getServerSnapshot = useCallback(() => serverSnapshot, [serverSnapshot])\n\n  return useSyncExternalStore(\n    store.subscribe,\n    store.getSnapshot,\n    getServerSnapshot,\n  )\n}\n","import type { ChannelsController } from '@sanity/channels'\nimport type {\n  ClientPerspective,\n  ContentSourceMap,\n  QueryParams,\n} from '@sanity/client'\nimport { VisualEditingMsg } from '@sanity/visual-editing-helpers'\nimport { useEffect, useMemo } from 'react'\nimport { type SanityDocument, useClient } from 'sanity'\n\nimport LiveStoreProvider from './LiveStoreProvider'\nimport { useLiveQuery } from './useLiveQuery'\n\nexport default function LoaderQueries(props: {\n  activePerspective: boolean\n  liveDocument: SanityDocument | null\n  channel: ChannelsController<VisualEditingMsg> | undefined\n  perspective: ClientPerspective\n  liveQueries: Record<string, { query: string; params: QueryParams }>\n}): any {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { activePerspective, liveDocument, channel, perspective, liveQueries } =\n    props\n  // @TODO lift up this client instance to the root, re-use it everywhere\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const studioClient = useClient({ apiVersion: '2023-10-16' })\n  const clientConfig = useMemo(() => studioClient.config(), [studioClient])\n  const client = useMemo(\n    () =>\n      studioClient.withConfig({\n        perspective,\n        resultSourceMap: 'withKeyArraySelector',\n      }),\n    [perspective, studioClient],\n  )\n  useEffect(() => {\n    if (channel && activePerspective) {\n      const { projectId, dataset } = clientConfig\n      channel.send('loaders', 'loader/perspective', {\n        projectId: projectId!,\n        dataset: dataset!,\n        perspective,\n      })\n    }\n  }, [activePerspective, channel, clientConfig, perspective])\n\n  return (\n    <LiveStoreProvider\n      liveDocument={liveDocument}\n      client={client}\n      perspective={perspective}\n      refreshInterval={activePerspective ? 2000 : 0}\n    >\n      {Object.entries(liveQueries).map(([key, { query, params }]) => (\n        <QuerySubscription\n          key={`${key}${perspective}`}\n          projectId={clientConfig.projectId!}\n          dataset={clientConfig.dataset!}\n          perspective={perspective}\n          query={query}\n          params={params}\n          channel={channel}\n        />\n      ))}\n    </LiveStoreProvider>\n  )\n}\n\nfunction QuerySubscription(props: {\n  projectId: string\n  dataset: string\n  perspective: ClientPerspective\n  query: string\n  params: QueryParams\n  channel: ChannelsController<VisualEditingMsg> | undefined\n}) {\n  const { projectId, dataset, perspective, query, params, channel } = props\n\n  const data = useLiveQuery<null | {\n    result: any\n    resultSourceMap?: ContentSourceMap\n  }>(null, query, params)\n  const result = data?.result\n  const resultSourceMap = data?.resultSourceMap\n\n  useEffect(() => {\n    if (resultSourceMap) {\n      channel!.send('loaders', 'loader/query-change', {\n        projectId,\n        dataset,\n        perspective,\n        query,\n        params,\n        result,\n        resultSourceMap,\n      })\n    }\n  }, [\n    channel,\n    dataset,\n    params,\n    perspective,\n    projectId,\n    query,\n    result,\n    resultSourceMap,\n  ])\n\n  return null\n}\n","import { createContext, type CSSProperties } from 'react'\n\nimport { PanelElement, ResizerElement } from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useContext,\n  useLayoutEffect,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const { getPanelStyle, registerElement, unregisterElement } = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [\n    id,\n    defaultSize,\n    order,\n    maxWidth,\n    minWidth,\n    registerElement,\n    unregisterElement,\n  ])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {\n  type FunctionComponent,\n  MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport { usePanelId } from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({ $disabled }) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-shadow-outline-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({ $disabled }) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({ id: propId, order, disabled = false }) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const id = usePanelId(propId)\n\n  const {\n    activeResizer,\n    drag,\n    startDragging,\n    stopDragging,\n    registerElement,\n    unregisterElement,\n  } = context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n\n    return () => {\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, { id, order, type: 'resizer', el })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import { useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const idRef = useRef(id || uuid())\n  return idRef.current\n}\n","export function debounce<F extends (...args: any[]) => void>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: any\n  return ((...args: any[]) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import { useMemo } from 'react'\n\nimport { debounce } from '../lib/debounce'\nimport { PanelElement } from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[]\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\n\nfunction getNextWidth(\n  panel: PanelElement,\n  nextWidth: number,\n  containerWidth: number,\n) {\n  const { maxWidth: maxWidthPx, minWidth: minWidthPx } = panel\n  const maxWidth =\n    maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const { panels, widths: prevWidths } = panelsState\n  const { widths: initialWidths } = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(\n      pivotPanel,\n      width + Math.abs(delta),\n      containerWidth,\n    )\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(\n      panel,\n      width - deltaRemaining,\n      containerWidth,\n    )\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied\n          .toPrecision(10)\n          .localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n            numeric: true,\n          }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(\n  panels: PanelElement[],\n  id: string,\n  widths: number[],\n): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(\n  element: PanelElement | ResizerElement,\n): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(\n  element: PanelElement | ResizerElement,\n): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(\n  elements: ElementMap,\n): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({ order: a }, { order: b }) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let { maxWidth, minWidth } = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\nimport { usePanelsStorage } from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({\n  children,\n}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(\n    () => getSortedElements(elements).filter(isPanel),\n    [elements],\n  )\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback(\n    (id: string, data: PanelElement | ResizerElement) => {\n      setElements((prev) => {\n        if (prev.has(id)) return prev\n        const next = new Map(prev)\n        next.set(id, data)\n        return next\n      })\n    },\n    [],\n  )\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {\n        containerWidth,\n        dragOffset,\n        panelBefore,\n        panelAfter,\n        resizerRect,\n      } = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const { widths: prevWidths } = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const { widths } = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(\n        panels,\n        storedWidths,\n        window.innerWidth,\n      )\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const { panels, widths: prevWidths } = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import { ReactNode } from 'react'\nimport { useEditState } from 'sanity'\n\nexport function HoldEditState(props: { id: string; type: string }): ReactNode {\n  const { id, type } = props\n\n  useEditState(id, type)\n\n  return null\n}\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useMemo,\n} from 'react'\n\nimport {\n  PresentationNavigateContext,\n  PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport { SetPresentationParams } from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    setParams: SetPresentationParams\n  }>\n> = function (props) {\n  const { children, setParams } = props\n\n  const navigate = useCallback(\n    (preview: string) => {\n      setParams({ preview })\n    },\n    [setParams],\n  )\n\n  const context = useMemo<PresentationNavigateContextValue>(\n    () => navigate,\n    [navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={context}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport { PresentationParamsContext } from './PresentationParamsContext'\nimport { PresentationParams } from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const { children, params } = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\nimport {\n  DeskDocumentPaneParams,\n  PresentationParams,\n  SetPresentationParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    deskParams: DeskDocumentPaneParams\n    devMode: boolean\n    name: string\n    params: PresentationParams\n    setParams: SetPresentationParams\n  }>\n> = function (props) {\n  const { children, deskParams, devMode, name, params, setParams } = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      deskParams,\n      devMode,\n      name,\n      params,\n      setParams,\n    }),\n    [deskParams, devMode, name, params, setParams],\n  )\n\n  return (\n    <PresentationContext.Provider value={context}>\n      {children}\n    </PresentationContext.Provider>\n  )\n}\n","import { motion } from 'framer-motion'\nimport styled from 'styled-components'\n\nexport const IFrame = motion(styled.iframe`\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  display: block;\n`)\n","import { LaunchIcon, ResetIcon } from '@sanity/icons'\nimport { Box, Button, TextInput, TextInputClearButtonProps } from '@sanity/ui'\nimport {\n  ChangeEvent,\n  FunctionComponent,\n  KeyboardEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useActiveWorkspace } from 'sanity'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  value: string\n}> = function (props) {\n  const { basePath = '/' } = useActiveWorkspace()?.activeWorkspace || {}\n  const { fontSize = 1, onChange, origin, padding = 3, value } = props\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(\n    undefined,\n  )\n  const [customValidity, setCustomValidity] = useState<string | undefined>(\n    undefined,\n  )\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (\n          !absoluteValue.startsWith(origin + '/') &&\n          absoluteValue !== origin\n        ) {\n          setCustomValidity(`URL must start with ${origin}`)\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (\n          !origin &&\n          (absoluteValue.startsWith(`${basePath}/`) ||\n            absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            `URL can't have the same base path as the Studio ${basePath}`,\n          )\n          return\n        }\n\n        const nextValue =\n          absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(\n    () => ({ icon: ResetIcon }),\n    [],\n  )\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        style={{ zIndex: 1 }}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={\n          <Box padding={1} style={{ lineHeight: 0, zIndex: -1 }}>\n            <Button\n              as=\"a\"\n              fontSize={fontSize}\n              href={origin + (sessionValue || value)}\n              icon={LaunchIcon}\n              padding={padding - 1}\n              mode=\"bleed\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            />\n          </Box>\n        }\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import type { ChannelStatus } from '@sanity/channels'\nimport { ClientPerspective } from '@sanity/client'\nimport {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  DatabaseIcon,\n  DesktopIcon,\n  EditIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n} from '@sanity/icons'\nimport { withoutSecretSearchParams } from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  ButtonTone,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n} from '@sanity/ui'\nimport { AnimatePresence, motion, MotionConfig } from 'framer-motion'\nimport {\n  ComponentType,\n  createElement,\n  Dispatch,\n  forwardRef,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { MAX_TIME_TO_OVERLAYS_CONNECTION } from '../constants'\nimport { PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { IFrame } from './IFrame'\nimport { PreviewLocationInput } from './PreviewLocationInput'\n\nconst MotionFlex = motion(Flex)\n\nconst StyledSwitch = styled(Switch)`\n  & > span {\n    width: 21px;\n    height: 13px;\n    overflow: hidden;\n\n    & > span:nth-child(1) {\n      width: 21px;\n      height: 13px;\n    }\n\n    & > span:nth-child(2) {\n      width: 9px;\n      height: 9px;\n      top: 2px;\n      left: 2px;\n    }\n  }\n\n  & input:checked + span {\n    & > span:nth-child(2) {\n      transform: translate3d(8px, 0, 0) !important;\n    }\n  }\n`\n\nconst PERSPECTIVE_TITLES: Record<ClientPerspective, string> = {\n  previewDrafts: 'Drafts',\n  published: 'Published',\n  raw: 'Raw',\n}\n\nconst PERSPECTIVE_TONES: Record<ClientPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n  raw: 'default',\n}\n\nconst PERSPECTIVE_ICONS: Record<ClientPerspective, ComponentType> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n  raw: DatabaseIcon,\n}\n\nexport const PreviewFrame = forwardRef<\n  HTMLIFrameElement,\n  {\n    initialUrl: URL\n    targetOrigin: string\n    navigatorEnabled: boolean\n    onPathChange: (nextPath: string) => void\n    overlayEnabled: boolean\n    params: PresentationParams\n    perspective: ClientPerspective\n    setPerspective: Dispatch<SetStateAction<ClientPerspective>>\n    toggleNavigator?: () => void\n    toggleOverlay: () => void\n    loadersConnection: ChannelStatus\n    overlaysConnection: ChannelStatus\n    previewKitConnection: ChannelStatus\n  }\n>(function PreviewFrame(props, ref) {\n  const {\n    initialUrl,\n    targetOrigin,\n    navigatorEnabled,\n    onPathChange,\n    overlayEnabled,\n    params,\n    perspective,\n    setPerspective,\n    toggleNavigator,\n    toggleOverlay,\n    loadersConnection,\n    overlaysConnection,\n    previewKitConnection,\n  } = props\n\n  const { devMode } = usePresentationTool()\n\n  const [mode, setMode] = useState<'desktop' | 'mobile'>('desktop')\n  const prefersReducedMotion = usePrefersReducedMotion()\n\n  const setDesktopMode = useCallback(() => setMode('desktop'), [setMode])\n  const setMobileMode = useCallback(() => setMode('mobile'), [setMode])\n  const [loading, setLoading] = useState(true)\n  const [timedOut, setTimedOut] = useState(false)\n  const [refreshing, setRefreshing] = useState(false)\n  const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n  const iframeIsBusy =\n    loading || refreshing || overlaysConnection === 'connecting'\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = useCallback(() => {\n    if (typeof ref === 'function' || !ref?.current) {\n      return\n    }\n\n    // Funky way to reload an iframe without CORS issues\n    // eslint-disable-next-line no-self-assign\n    // ref.current.src = ref.current.src\n    ref.current.src = `${targetOrigin}${params.preview || '/'}`\n\n    setRefreshing(true)\n  }, [params.preview, targetOrigin, ref])\n  const handleRetry = useCallback(() => {\n    if (typeof ref === 'function' || !ref?.current) {\n      return\n    }\n\n    ref.current.src = initialUrl.toString()\n\n    setRefreshing(true)\n  }, [ref, initialUrl])\n  const handleContinueAnyway = useCallback(() => {\n    setContinueAnyway(true)\n  }, [])\n\n  const [continueAnyway, setContinueAnyway] = useState(false)\n  const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] =\n    useState(false)\n  useEffect(() => {\n    if (loading || refreshing) {\n      return\n    }\n\n    if (\n      overlaysConnection === 'connecting' ||\n      overlaysConnection === 'reconnecting'\n    ) {\n      const timeout = setTimeout(() => {\n        setShowOverlaysConnectionState(true)\n      }, 1000)\n      return () => clearTimeout(timeout)\n    }\n    return\n  }, [overlaysConnection, loading, refreshing, setShowOverlaysConnectionState])\n\n  useEffect(() => {\n    if (loading || refreshing || !showOverlaysConnectionStatus) {\n      return\n    }\n    if (overlaysConnection === 'connected') {\n      setSomethingIsWrong(false)\n      setShowOverlaysConnectionState(false)\n      setTimedOut(false)\n      setContinueAnyway(false)\n    }\n    if (overlaysConnection === 'connecting') {\n      const timeout = setTimeout(() => {\n        setTimedOut(true)\n        // eslint-disable-next-line no-console\n        console.error(\n          `Unable to connect to overlays. Make sure you're calling the 'enableOverlays' function in '@sanity/overlays' correctly`,\n        )\n      }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n      return () => clearTimeout(timeout)\n    }\n    if (overlaysConnection === 'reconnecting') {\n      const timeout = setTimeout(() => {\n        setTimedOut(true)\n        setSomethingIsWrong(true)\n      }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n      return () => clearTimeout(timeout)\n    }\n    if (overlaysConnection === 'disconnected') {\n      setSomethingIsWrong(true)\n    }\n    return\n  }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n  const previewLocationRoute = useMemo(() => {\n    const previewUrl = new URL(params.preview || '/', targetOrigin)\n    const { pathname, search } = withoutSecretSearchParams(previewUrl)\n\n    return `${pathname}${search}`\n  }, [params.preview, targetOrigin])\n\n  const onIFrameLoad = useCallback(() => {\n    setLoading(false)\n    setRefreshing(false)\n  }, [])\n\n  return (\n    <MotionConfig\n      transition={prefersReducedMotion ? { duration: 0 } : undefined}\n    >\n      <TooltipDelayGroupProvider delay={1000}>\n        <Card\n          flex=\"none\"\n          padding={2}\n          shadow={1}\n          style={{ position: 'relative' }}\n        >\n          <Flex align=\"center\" gap={2} style={{ minHeight: 0 }}>\n            {toggleNavigator && (\n              <Tooltip\n                content={<Text size={1}>Toggle navigator</Text>}\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Toggle navigator\"\n                  fontSize={1}\n                  icon={PanelLeftIcon}\n                  mode=\"bleed\"\n                  onClick={toggleNavigator}\n                  padding={3}\n                  selected={navigatorEnabled}\n                />\n              </Tooltip>\n            )}\n\n            <Tooltip\n              content={\n                <Flex align=\"center\" style={{ whiteSpace: 'nowrap' }}>\n                  <Box padding={1}>\n                    <Text size={1}>\n                      {overlayEnabled\n                        ? 'Disable edit overlay'\n                        : 'Enable edit overlay'}\n                    </Text>\n                  </Box>\n                </Flex>\n              }\n              fallbackPlacements={['bottom-start']}\n              padding={1}\n              placement=\"bottom\"\n              portal\n            >\n              <Card\n                as=\"label\"\n                flex=\"none\"\n                padding={3}\n                style={{\n                  lineHeight: 0,\n                  borderRadius: 999,\n                  userSelect: 'none',\n                }}\n                tone={overlayEnabled ? 'positive' : undefined}\n              >\n                <Flex align=\"center\" gap={2}>\n                  <div style={{ margin: -2 }}>\n                    <StyledSwitch\n                      checked={overlayEnabled}\n                      onChange={toggleOverlay}\n                      disabled={iframeIsBusy}\n                    />\n                  </div>\n                  <Box>\n                    <Text muted size={1} weight=\"medium\">\n                      Edit\n                    </Text>\n                  </Box>\n                </Flex>\n              </Card>\n            </Tooltip>\n\n            {devMode && (\n              <Tooltip\n                content={\n                  <Text size={1}>\n                    {refreshing ? 'Refreshing…' : 'Refresh preview'}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Refresh preview\"\n                  fontSize={1}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={refreshing}\n                  onClick={handleRefresh}\n                  padding={3}\n                />\n              </Tooltip>\n            )}\n\n            <Box flex={1}>\n              <PreviewLocationInput\n                onChange={onPathChange}\n                origin={previewLocationOrigin}\n                value={previewLocationRoute}\n              />\n            </Box>\n\n            <Flex align=\"center\" flex=\"none\" gap={1}>\n              <MenuButton\n                button={\n                  <Button\n                    fontSize={1}\n                    iconRight={ChevronDownIcon}\n                    mode=\"bleed\"\n                    padding={3}\n                    space={2}\n                    text={PERSPECTIVE_TITLES[perspective]}\n                    loading={\n                      iframeIsBusy ||\n                      (loadersConnection === 'connecting' &&\n                        previewKitConnection !== 'connected')\n                    }\n                    disabled={loadersConnection !== 'connected'}\n                  />\n                }\n                id=\"perspective-menu\"\n                menu={\n                  <Menu style={{ maxWidth: 240 }}>\n                    <MenuItem\n                      fontSize={1}\n                      onClick={() => setPerspective('previewDrafts')}\n                      padding={3}\n                      pressed={perspective === 'previewDrafts'}\n                      tone={PERSPECTIVE_TONES['previewDrafts']}\n                    >\n                      <Flex align=\"flex-start\" gap={3}>\n                        <Box flex=\"none\">\n                          <Text size={1}>\n                            {createElement(PERSPECTIVE_ICONS['previewDrafts'])}\n                          </Text>\n                        </Box>\n                        <Stack flex={1} space={2}>\n                          <Text size={1} weight=\"medium\">\n                            {PERSPECTIVE_TITLES['previewDrafts']}\n                          </Text>\n                          <Text muted size={1}>\n                            View this page with latest draft content\n                          </Text>\n                        </Stack>\n                        <Box flex=\"none\">\n                          <Text\n                            muted\n                            size={1}\n                            style={{\n                              opacity: perspective === 'previewDrafts' ? 1 : 0,\n                            }}\n                          >\n                            <CheckmarkIcon />\n                          </Text>\n                        </Box>\n                      </Flex>\n                    </MenuItem>\n                    <MenuItem\n                      fontSize={1}\n                      onClick={() => setPerspective('published')}\n                      padding={3}\n                      pressed={perspective === 'published'}\n                      tone={PERSPECTIVE_TONES['published']}\n                    >\n                      <Flex align=\"flex-start\" gap={3}>\n                        <Box flex=\"none\">\n                          <Text size={1}>\n                            {createElement(PERSPECTIVE_ICONS['published'])}\n                          </Text>\n                        </Box>\n                        <Stack flex={1} space={2}>\n                          <Text size={1} weight=\"medium\">\n                            {PERSPECTIVE_TITLES['published']}\n                          </Text>\n                          <Text muted size={1}>\n                            View this page with published content\n                          </Text>\n                        </Stack>\n                        <Box flex=\"none\">\n                          <Text\n                            muted\n                            size={1}\n                            style={{\n                              opacity: perspective === 'published' ? 1 : 0,\n                            }}\n                          >\n                            <CheckmarkIcon />\n                          </Text>\n                        </Box>\n                      </Flex>\n                    </MenuItem>\n                  </Menu>\n                }\n                popover={{\n                  // arrow: false,\n                  constrainSize: true,\n                  placement: 'bottom',\n                  portal: true,\n                }}\n              />\n            </Flex>\n\n            <Flex align=\"center\" flex=\"none\" gap={1}>\n              <Tooltip\n                content={<Text size={1}>Full viewport</Text>}\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Full viewport\"\n                  fontSize={1}\n                  icon={DesktopIcon}\n                  mode=\"bleed\"\n                  onClick={setDesktopMode}\n                  padding={3}\n                  selected={mode === 'desktop'}\n                />\n              </Tooltip>\n              <Tooltip\n                content={<Text size={1}>Narrow viewport</Text>}\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Narrow viewport\"\n                  fontSize={1}\n                  icon={MobileDeviceIcon}\n                  mode=\"bleed\"\n                  onClick={setMobileMode}\n                  padding={3}\n                  selected={mode === 'mobile'}\n                />\n              </Tooltip>\n            </Flex>\n          </Flex>\n        </Card>\n\n        <Card flex={1} tone=\"transparent\">\n          <Flex\n            align=\"center\"\n            height=\"fill\"\n            justify=\"center\"\n            padding={mode === 'desktop' ? 0 : 2}\n            sizing=\"border\"\n            style={{\n              position: 'relative',\n              cursor: iframeIsBusy ? 'wait' : undefined,\n            }}\n          >\n            <AnimatePresence>\n              {!somethingIsWrong &&\n              !loading &&\n              !refreshing &&\n              showOverlaysConnectionStatus &&\n              !continueAnyway ? (\n                <MotionFlex\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  variants={spinnerVariants}\n                  justify=\"center\"\n                  align=\"center\"\n                  style={{\n                    inset: `0`,\n                    position: `absolute`,\n                    backdropFilter: timedOut\n                      ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                      : 'blur(2px)',\n                    ['transition' as string]:\n                      'backdrop-filter 0.2s ease-in-out',\n                    zIndex: 1,\n                  }}\n                >\n                  <Flex\n                    style={{ ...sizes[mode] }}\n                    justify=\"center\"\n                    align=\"center\"\n                    direction=\"column\"\n                    gap={4}\n                  >\n                    {timedOut && (\n                      <Button\n                        disabled\n                        fontSize={1}\n                        mode=\"ghost\"\n                        text=\"Continue anyway\"\n                        style={{ opacity: 0 }}\n                      />\n                    )}\n                    <Card\n                      radius={2}\n                      tone={timedOut ? 'caution' : 'inherit'}\n                      padding={4}\n                      shadow={1}\n                    >\n                      <Flex\n                        justify=\"center\"\n                        align=\"center\"\n                        direction=\"column\"\n                        gap={4}\n                      >\n                        <Spinner muted />\n                        <Text muted size={1}>\n                          {timedOut ? (\n                            <>\n                              Unable to connect, check the browser console for\n                              more information.\n                            </>\n                          ) : (\n                            'Connecting…'\n                          )}\n                        </Text>\n                      </Flex>\n                    </Card>\n                    {timedOut && (\n                      <Button\n                        fontSize={1}\n                        // mode=\"ghost\"\n                        tone=\"critical\"\n                        onClick={handleContinueAnyway}\n                        text=\"Continue anyway\"\n                      />\n                    )}\n                  </Flex>\n                </MotionFlex>\n              ) : (loading || iframeIsBusy) && !continueAnyway ? (\n                <MotionFlex\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  variants={spinnerVariants}\n                  justify=\"center\"\n                  align=\"center\"\n                  style={{\n                    inset: `0`,\n                    position: `absolute`,\n                    // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                  }}\n                >\n                  <Flex\n                    style={{ ...sizes[mode] }}\n                    justify=\"center\"\n                    align=\"center\"\n                    direction=\"column\"\n                    gap={4}\n                  >\n                    <Spinner muted />\n                    <Text muted size={1}>\n                      Loading…\n                    </Text>\n                  </Flex>\n                </MotionFlex>\n              ) : somethingIsWrong && !continueAnyway ? (\n                <MotionFlex\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  variants={errorVariants}\n                  justify=\"center\"\n                  align=\"center\"\n                  style={{\n                    background: 'var(--card-bg-color)',\n                    inset: `0`,\n                    position: `absolute`,\n                    borderTop: '1px solid transparent',\n                    boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                  }}\n                >\n                  <ErrorCard\n                    flex={1}\n                    message=\"Could not connect to the preview\"\n                    onRetry={handleRetry}\n                    onContinueAnyway={handleContinueAnyway}\n                  >\n                    {devMode && (\n                      <>\n                        {overlaysConnection !== 'connected' && (\n                          <Card padding={3} radius={2} tone=\"critical\">\n                            <Stack space={3}>\n                              <Label muted size={0}>\n                                Overlay connection status\n                              </Label>\n                              <Code size={1}>{overlaysConnection}</Code>\n                            </Stack>\n                          </Card>\n                        )}\n\n                        {loadersConnection !== 'connected' && (\n                          <Card padding={3} radius={2} tone=\"critical\">\n                            <Stack space={3}>\n                              <Label muted size={0}>\n                                Loader connection status\n                              </Label>\n                              <Code size={1}>{loadersConnection}</Code>\n                            </Stack>\n                          </Card>\n                        )}\n                      </>\n                    )}\n                  </ErrorCard>\n                </MotionFlex>\n              ) : null}\n            </AnimatePresence>\n            <IFrame\n              ref={ref}\n              style={{\n                pointerEvents:\n                  iframeIsBusy && !continueAnyway ? 'none' : 'auto',\n                boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                borderTop: '1px solid transparent',\n              }}\n              src={initialUrl.toString()}\n              initial={['background']}\n              variants={iframeVariants}\n              animate={[\n                (loading || iframeIsBusy) && !continueAnyway\n                  ? 'background'\n                  : 'active',\n                refreshing ? 'reloading' : 'idle',\n                mode,\n                showOverlaysConnectionStatus && !continueAnyway\n                  ? 'timedOut'\n                  : '',\n              ]}\n              onLoad={onIFrameLoad}\n            />\n          </Flex>\n        </Card>\n      </TooltipDelayGroupProvider>\n    </MotionConfig>\n  )\n})\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst errorVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-shadow-outline-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","import { studioPath } from '@sanity/client/csm'\nimport { urlStringToPath } from '@sanity/visual-editing-helpers'\n\nimport { PresentationStateParams } from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(\n  state: PresentationStateParams,\n): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","import { studioPath } from '@sanity/client/csm'\nimport { pathToUrlString } from '@sanity/visual-editing-helpers'\nimport isEqual from 'lodash.isequal'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { NavigateOptions, RouterContextValue, RouterState } from 'sanity/router'\n\nimport { debounce } from './lib/debounce'\nimport { parseRouterState } from './lib/parse'\nimport {\n  DeskDocumentPaneParams,\n  PresentationParams,\n  PresentationStateParams,\n  SetPresentationParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n}): {\n  deskParams: DeskDocumentPaneParams\n  navigate: (nextState: RouterState, options?: NavigateOptions) => void\n  params: PresentationParams\n  setParams: SetPresentationParams\n} {\n  const [params, setParamsState] = useState<PresentationParams>(() => {\n    const { id, path, type } = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams.preview ||\n        `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams.perspective,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n    }\n  })\n\n  const setParams = useCallback((newParams: Partial<PresentationParams>) => {\n    setParamsState((state) => {\n      const nextState = { ...state, ...newParams }\n      if (isEqual(pruneObject(state), pruneObject(nextState))) {\n        return state\n      }\n      return nextState\n    })\n  }, [])\n\n  const deskParams = useMemo<DeskDocumentPaneParams>(\n    () =>\n      pruneObject({\n        inspect: params.inspect,\n        path: params.path,\n        rev: params.rev,\n        since: params.since,\n        template: params.template,\n        view: params.view,\n        // assist\n        pathKey: params.pathKey,\n        instruction: params.instruction,\n        // comments\n        comment: params.comment,\n      }),\n    [\n      params.inspect,\n      params.path,\n      params.rev,\n      params.since,\n      params.template,\n      params.view,\n      params.pathKey,\n      params.instruction,\n      params.comment,\n    ],\n  )\n\n  useEffect(() => {\n    const { id, path, type } = parseRouterState(routerState)\n\n    const timeout = setTimeout(\n      () =>\n        setParams({\n          id,\n          type: type === '*' ? undefined : type,\n          path,\n          preview:\n            routerSearchParams.preview ||\n            `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n          perspective: routerSearchParams.perspective,\n          inspect: routerSearchParams.inspect,\n          rev: routerSearchParams.rev,\n          since: routerSearchParams.since,\n          template: routerSearchParams.template,\n          view: routerSearchParams.view,\n          // assist\n          pathKey: routerSearchParams.pathKey,\n          instruction: routerSearchParams.instruction,\n          // comments\n          comment: routerSearchParams.comment,\n        }),\n      0,\n    )\n    return () => clearTimeout(timeout)\n  }, [initialPreviewUrl, routerSearchParams, routerState, setParams])\n\n  const navigate = useMemo(() => {\n    // Debounce navigation to mitigate various event related race conditions\n    return debounce((nextState: RouterState, options?: NavigateOptions) => {\n      const state = pruneObject(nextState)\n      routerNavigate(state, options)\n    }, 50)\n  }, [routerNavigate])\n\n  const previewRef = useRef(params.preview)\n\n  useEffect(() => {\n    const previousPreview = previewRef.current\n    previewRef.current = params.preview\n\n    const type = params.type\n    const id = params.id\n    const path = params.path\n      ? pathToUrlString(studioPath.fromString(params.path))\n      : undefined\n\n    const searchParams = pruneObject({\n      preview: params.preview,\n      perspective: params.perspective === 'published' ? 'published' : undefined,\n      inspect: params.inspect,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n    }) satisfies PresentationParams\n\n    const replace = params.preview === previousPreview\n    const timeout = setTimeout(\n      () =>\n        navigate(\n          {\n            type,\n            id,\n            path,\n            _searchParams: Object.entries(\n              searchParams as Record<string, string>,\n            ),\n          },\n          { replace },\n        ),\n      0,\n    )\n    return () => clearTimeout(timeout)\n  }, [navigate, params])\n\n  return {\n    navigate,\n    setParams,\n    deskParams,\n    params,\n  }\n}\n","import { createPreviewSecret } from '@sanity/preview-url-secret/create-secret'\nimport { definePreviewUrl } from '@sanity/preview-url-secret/define-preview-url'\nimport { startTransition, useEffect, useMemo, useState } from 'react'\nimport {\n  type SanityClient,\n  useActiveWorkspace,\n  useClient,\n  useCurrentUser,\n} from 'sanity'\nimport { suspend } from 'suspend-react'\n\nimport { API_VERSION } from './constants'\nimport { PreviewUrlOption } from './types'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  previewSearchParam: string | null,\n): URL {\n  const client = useClient({ apiVersion: API_VERSION })\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName)\n  const previewUrlSecret = usePreviewUrlSecret(\n    typeof previewUrl === 'object' || typeof previewUrl === 'function',\n    deps,\n  )\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        } else if (document.referrer) {\n          const referrerUrl = new URL(document.referrer)\n          if (referrerUrl.origin === resolvedUrl.origin) {\n            resultUrl = referrerUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) ||\n          resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object'\n        ? definePreviewUrl<SanityClient>(previewUrl)\n        : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      previewSearchParam,\n      referrer: typeof document === 'undefined' ? null : document.referrer,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n) {\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      '@sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName],\n  )\n}\n\nfunction usePreviewUrlSecret(\n  enabled: boolean,\n  deps: (string | symbol | undefined)[],\n) {\n  const client = useClient({ apiVersion: API_VERSION })\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return\n    const timeout = setTimeout(() => {\n      startTransition(() =>\n        setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()),\n      )\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import {\n  type ChannelsController,\n  type ChannelStatus,\n  createChannelsController,\n} from '@sanity/channels'\nimport type { ClientPerspective, QueryParams } from '@sanity/client'\nimport { studioPath } from '@sanity/client/csm'\nimport { Flex } from '@sanity/ui'\nimport {\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  type VisualEditingConnectionIds,\n  type VisualEditingMsg,\n} from '@sanity/visual-editing-helpers'\nimport {\n  type ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useUnique } from 'sanity'\nimport {\n  getPublishedId,\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n} from 'sanity'\nimport { RouterContextValue, useRouter } from 'sanity/router'\nimport styled from 'styled-components'\n\nimport { DEFAULT_TOOL_NAME } from './constants'\nimport { ContentEditor } from './editor/ContentEditor'\nimport LoaderQueries from './loader/LoaderQueries'\nimport { Panel } from './panels/Panel'\nimport { PanelResizer } from './panels/PanelResizer'\nimport { Panels } from './panels/Panels'\nimport { HoldEditState } from './perf/HoldEditState'\nimport { PresentationNavigateProvider } from './PresentationNavigateProvider'\nimport { PresentationParamsProvider } from './PresentationParamsProvider'\nimport { PresentationProvider } from './PresentationProvider'\nimport { PreviewFrame } from './preview/PreviewFrame'\nimport {\n  DeskDocumentPaneParams,\n  NavigatorOptions,\n  PresentationPluginOptions,\n  PresentationStateParams,\n} from './types'\nimport { DocumentOnPage, useDocumentsOnPage } from './useDocumentsOnPage'\nimport { useLocalState } from './useLocalState'\nimport { useParams } from './useParams'\nimport { usePreviewUrl } from './usePreviewUrl'\n\nfunction Navigator(props: NavigatorOptions) {\n  const { minWidth, maxWidth, component: NavigatorComponent } = props\n  const navigatorDisabled =\n    minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const { previewUrl: _previewUrl, components } = props.tool.options ?? {}\n  const name = props.tool.name || DEFAULT_TOOL_NAME\n  const { unstable_navigator } = components || {}\n\n  const { navigate: routerNavigate, state: routerState } =\n    useRouter() as RouterContextValue & { state: PresentationStateParams }\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams.preview || null,\n  )\n\n  const [devMode] = useState(() => {\n    const option = props.tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return (\n      typeof window !== 'undefined' && window.location.hostname === 'localhost'\n    )\n  })\n\n  // @TODO The iframe URL might change, we have to make sure we don't post Studio state to unknown origins\n  // see https://medium.com/@chiragrai3666/exploiting-postmessage-e2b01349c205\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [channel, setChannel] = useState<ChannelsController<VisualEditingMsg>>()\n\n  const [liveQueries, setLiveQueries] = useState<\n    Record<\n      string,\n      { query: string; params: QueryParams; perspective: ClientPerspective }\n    >\n  >({})\n\n  const { setParams, params, deskParams } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n  })\n\n  const [perspective, setPerspective] = useState<ClientPerspective>(() =>\n    params.perspective === 'published' ? params.perspective : 'previewDrafts',\n  )\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective)\n\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  const navigatorProvided = !!unstable_navigator?.component\n\n  const [navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const previewRef = useRef<typeof params.preview>()\n\n  const idRef = useRef(params.id)\n\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const [preloadRefs, setPreloadRefs] = useState<DocumentOnPage[]>(() =>\n    documentsOnPage\n      .slice(0, 3)\n      .map((d) => ({ ...d, _id: getPublishedId(d._id) })),\n  )\n\n  // Update the perspective when the param changes\n  useEffect(() => {\n    if (perspective !== params.perspective) {\n      setParams({ perspective })\n    }\n  }, [params.perspective, perspective, setParams])\n\n  useEffect(() => {\n    setPreloadRefs(\n      documentsOnPage\n        .slice(0, 3)\n        .map((d) => ({ ...d, _id: getPublishedId(d._id) })),\n    )\n  }, [documentsOnPage])\n\n  useEffect(() => {\n    if (params.id !== idRef.current) {\n      idRef.current = params.id\n\n      if (params.id) {\n        setPreloadRefs((p) => {\n          const exists = p.find((d) => d._id === params.id)\n\n          if (exists) return p\n\n          return p.slice(1).concat([{ _id: params.id!, _type: params.type! }])\n        })\n      }\n    }\n  }, [params])\n\n  const [overlaysConnection, setOverlaysConnection] =\n    useState<ChannelStatus>('connecting')\n  const [loadersConnection, setLoadersConnection] =\n    useState<ChannelStatus>('connecting')\n  const [previewKitConnection, setPreviewKitConnection] =\n    useState<ChannelStatus>('connecting')\n\n  useEffect(() => {\n    const iframe = iframeRef.current\n\n    if (!iframe) return\n\n    const nextChannel = createChannelsController<VisualEditingMsg>({\n      id: 'presentation' satisfies VisualEditingConnectionIds,\n      frame: iframe,\n      frameOrigin: targetOrigin,\n      connectTo: [\n        {\n          id: 'overlays' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setOverlaysConnection,\n          onEvent(type, data) {\n            if (type === 'overlay/focus' && 'id' in data) {\n              setParams({\n                id: data.id,\n                path: data.path,\n                type: data.type,\n              })\n            } else if (type === 'overlay/navigate') {\n              if (previewRef.current !== data.url) {\n                const isInitialNavigation = previewRef.current === undefined\n\n                previewRef.current = data.url\n                setParams(\n                  isInitialNavigation\n                    ? { preview: data.url }\n                    : { id: undefined, type: undefined, preview: data.url },\n                )\n              }\n            } else if (type === 'overlay/toggle') {\n              setOverlayEnabled(data.enabled)\n            }\n          },\n        },\n        {\n          id: 'loaders' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setLoadersConnection,\n          onEvent(type, data) {\n            if (type === 'loader/documents') {\n              setDocumentsOnPage(data.perspective, data.documents)\n            } else if (\n              type === 'loader/query-listen' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              setLiveQueries((prev) => ({\n                ...prev,\n                [getQueryCacheKey(data.query, data.params)]: {\n                  perspective: data.perspective,\n                  query: data.query,\n                  params: data.params,\n                },\n              }))\n            }\n          },\n        },\n        {\n          id: 'preview-kit' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setPreviewKitConnection,\n          onEvent(type, data) {\n            if (\n              type === 'preview-kit/documents' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              setDocumentsOnPage(data.perspective, data.documents)\n            }\n          },\n        },\n      ],\n    })\n    setChannel(nextChannel)\n\n    return () => {\n      nextChannel.destroy()\n      setChannel(undefined)\n    }\n  }, [dataset, projectId, setDocumentsOnPage, setParams, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    // eslint-disable-next-line no-warning-comments\n    // @todo nextDocumentId may not be needed with this strategy\n    (nextDocumentId: string, nextPath: Path) => {\n      setParams({\n        // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n        path: studioPath.toString(nextPath),\n      })\n    },\n    [setParams],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (\n        url.origin === initialPreviewUrl.origin &&\n        preview !== params.preview\n      ) {\n        setParams({ id: undefined, path: undefined, preview })\n      }\n    },\n    [initialPreviewUrl, params, setParams],\n  )\n\n  const handleDeskParams = useCallback(\n    (deskParams: DeskDocumentPaneParams) => {\n      setParams({ ...deskParams })\n    },\n    [setParams],\n  )\n\n  useEffect(() => {\n    if (params.id && params.path) {\n      channel?.send('overlays', 'presentation/focus', {\n        id: params.id,\n        path: params.path,\n      })\n    } else {\n      channel?.send('overlays', 'presentation/blur', undefined)\n    }\n  }, [channel, params.id, params.path])\n\n  // Dispatch a navigation message whenever the preview param changes\n  // @todo This will cause a reflection of received navigation messages which could be problematic\n  useEffect(() => {\n    if (\n      previewRef.current &&\n      params.preview &&\n      previewRef.current !== params.preview\n    ) {\n      previewRef.current = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        channel?.send('overlays', 'presentation/navigate', {\n          url: params.preview,\n          type: 'push',\n        })\n      }\n    }\n  }, [channel, overlaysConnection, targetOrigin, params.preview])\n\n  const toggleOverlay = useCallback(\n    () => channel?.send('overlays', 'presentation/toggleOverlay', undefined),\n    [channel],\n  )\n\n  // The current document being edited, it's put on the fast track for super low latency updates\n  const [liveDocument, setLiveDocument] = useState<SanityDocument | null>(null)\n  const onDocumentChange = useCallback(\n    (document: SanityDocument | null) => setLiveDocument(document),\n    [],\n  )\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  return (\n    <>\n      <PresentationProvider\n        deskParams={deskParams}\n        devMode={devMode}\n        name={name}\n        params={params}\n        setParams={setParams}\n      >\n        {/* perf improvement: preload edit state */}\n        {preloadRefs.map((d) => (\n          <HoldEditState id={d._id} key={d._id} type={d._type} />\n        ))}\n\n        <PresentationNavigateProvider setParams={setParams}>\n          <PresentationParamsProvider params={params}>\n            <Container height=\"fill\">\n              <Panels>\n                {navigatorProvided && navigatorEnabled && (\n                  <Navigator {...unstable_navigator} />\n                )}\n                <Panel\n                  id=\"preview\"\n                  minWidth={325}\n                  defaultSize={navigatorEnabled ? 50 : 75}\n                  order={3}\n                >\n                  <Flex direction=\"column\" flex={1} height=\"fill\">\n                    <PreviewFrame\n                      initialUrl={initialPreviewUrl}\n                      navigatorEnabled={navigatorEnabled}\n                      onPathChange={handlePreviewPath}\n                      overlayEnabled={overlayEnabled}\n                      params={params}\n                      perspective={perspective}\n                      ref={iframeRef}\n                      setPerspective={setPerspective}\n                      targetOrigin={targetOrigin}\n                      toggleNavigator={toggleNavigator}\n                      toggleOverlay={toggleOverlay}\n                      loadersConnection={loadersConnection}\n                      overlaysConnection={overlaysConnection}\n                      previewKitConnection={previewKitConnection}\n                    />\n                  </Flex>\n                </Panel>\n                <PanelResizer order={4} />\n                <Panel id=\"content\" minWidth={325} order={5}>\n                  <ContentEditor\n                    refs={documentsOnPage}\n                    deskParams={deskParams}\n                    documentId={params.id}\n                    documentType={params.type}\n                    onDeskParams={handleDeskParams}\n                    onFocusPath={handleFocusPath}\n                    onDocumentChange={onDocumentChange}\n                    previewUrl={params.preview}\n                  />\n                </Panel>\n              </Panels>\n            </Container>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      {channel && (\n        <>\n          <LoaderQueries\n            key=\"published\"\n            activePerspective={perspective === 'published'}\n            channel={channel}\n            liveQueries={liveQueries}\n            perspective=\"published\"\n            // Only send the liveDocument if it's a published document\n            liveDocument={\n              liveDocument?._id?.startsWith('drafts.') ? null : liveDocument\n            }\n          />\n          <LoaderQueries\n            key=\"previewDrafts\"\n            activePerspective={perspective === 'previewDrafts'}\n            channel={channel}\n            liveQueries={liveQueries}\n            perspective=\"previewDrafts\"\n            liveDocument={liveDocument}\n          />\n        </>\n      )}\n    </>\n  )\n}\n","import { ClientPerspective } from '@sanity/client'\nimport { useCallback, useMemo, useState } from 'react'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n  _projectId?: string\n  dataset?: string\n}\n\nexport function useDocumentsOnPage(\n  perspective: ClientPerspective,\n): [\n  DocumentOnPage[],\n  (perspective: ClientPerspective, state: DocumentOnPage[]) => void,\n] {\n  const [state, setState] = useState<\n    Record<ClientPerspective, Map<string, DocumentOnPage>>\n  >(() => ({ published: new Map(), previewDrafts: new Map(), raw: new Map() }))\n\n  const setDocumentsOnPage = useCallback(\n    (perspective: ClientPerspective, documents: DocumentOnPage[]) => {\n      setState((state) => {\n        let changed = false\n        let map = state[perspective]\n        const getKey = (document: DocumentOnPage) => {\n          return `${document._projectId}-${document.dataset}-${document._type}-${document._id}`\n        }\n        const knownKeys = new Set<ReturnType<typeof getKey>>()\n        // Add anything new, and track all keys\n        for (const document of documents) {\n          const key = getKey(document)\n          knownKeys.add(key)\n          if (!map.has(key)) {\n            map.set(key, document)\n            changed = true\n          }\n        }\n        // Remove anything that is no longer on the page\n        for (const key of map.keys()) {\n          if (!knownKeys.has(key)) {\n            map.delete(key)\n            changed = true\n          }\n        }\n\n        if (changed) {\n          map = new Map(map)\n          return { ...state, [perspective]: new Map(map) }\n        }\n\n        return state\n      })\n    },\n    [],\n  )\n\n  const documentsOnPageMap = useMemo(() => {\n    return state[perspective]\n  }, [perspective, state])\n\n  const documentsOnPage = useMemo(() => {\n    return [...documentsOnPageMap.values()]\n  }, [documentsOnPageMap])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport function useLocalState<T>(\n  key: string,\n  defaultValue: T,\n): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n"],"names":["jsxRuntime","require","csm","ui","react","sanity","router","styled","index","desk","groqStore","mendoza","icons","withoutSecretSearchParams","framerMotion","isEqual","createSecret","definePreviewUrl","suspendReact","_interopDefaultCompat","e","default","styled__default","isEqual__default","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","native","randomUUID","v4","options","buf","offset","rnds","random","arr","unsafeStringify","RESPONSE_TIMEOUT","HEARTBEAT_INTERVAL","HANDSHAKE_INTERVAL","HANDSHAKE_MSG_TYPES","isHandshakeMessage","type","some","t","isLegacyHandshakeMessage","data","Array","isArray","every","key","startsWith","createChannelsController","config","iframe","frame","contentWindow","channels","connectTo","map","buffer","id","handler","handshakeHandler","status","interval","heartbeat","stopHandshake","channel","window","clearInterval","find","from","setChannelStatus","sendHandshake","messageHandler","connectionId","args","onEvent","send","responseTo","handleEvents","console","error","origin","domain","to","includes","frameOrigin","isValidMessageEvent","stopHeartbeat","next","onStatusUpdate","uuid","setInterval","startHandshake","heartbeatInverval","startHeartbeat","toFlush","splice","length","forEach","flush","msg","postMessage","targetOrigin","expectResponse","maxWait","setTimeout","removeEventListener","transact","warn","eventData","clearTimeout","addEventListener","destroy","n","r","o","u","alt","ctrl","mod","test","navigator","platform","shift","toUpperCase","ErrorCard","props","children","message","onRetry","onContinueAnyway","restProps","retryButton","jsx","Button","fontSize","mode","onClick","text","continueAnywayButton","tone","Card","height","Flex","align","justify","Container","padding","sizing","width","jsxs","Stack","space","Text","size","weight","muted","Inline","Box","usePresentationTool","presentation","useContext","PresentationContext","resolveQueryStringFromParams","nextParams","allowed","params","parts","Object","entries","value","join","encodeQueryString","filter","reduce","obj","BackLink","forwardRef","ref","deskParams","StateLink","state","_searchParams","preview","title","ReferenceChildLink","documentId","documentType","PresentationPaneRouterProvider","onDeskParams","previewUrl","refs","routerState","resolvePathFromState","useRouter","routerSearchParams","useUnique","fromEntries","createPathWithParams","useCallback","context","useMemo","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","childLinkProps","childId","getPublishedId","_id","_type","ParameterizedLink","Fragment","closeCurrentAndAfter","handleEditReference","replaceCurrent","pane","closeCurrent","duplicateCurrent","setView","viewId","setParams","inspect","setPayload","navigateIntent","intentName","intentParams","PaneRouterContext","Provider","RootLayout","PaneLayout","Root","WrappedCode","Code","DocumentListPane","devMode","ids","schemaTypeName","errorParams","setErrorParams","useState","handleRetry","useEffect","flex","overflow","radius","Label","ErrorBoundary","onCatch","DeskToolProvider","direction","DeskDocumentListPane","itemId","paneKey","DocumentListPanel","DocumentPane","onFocusPath","paneDocumentNode","setLayoutCollapsed","useDeskTool","handleRootCollapse","handleRootExpand","style","onExpand","onCollapse","DeskDocumentPane","DocumentPanel","onDocumentChange","editState","useEditState","documentValue","draft","published","handleFocusPath","path","ContentEditor","document","defineListenerContext","createContext","IsEnabledContext","warnedAboutCrossDatasetReference","turboChargeResultIfSourceMap","liveDocument","projectId","dataset","result","perspective","resultSourceMap","applySourceDocuments","sourceDocument","_projectId","unstable__getDocumentCacheKey","unstable__documentsCache","get","getQueryCacheKey","query","JSON","stringify","LiveStoreProvider","memo","client","refreshInterval","subscriptions","setSubscriptions","snapshots","Map","hooks","cache","subscribe","listener","has","set","listeners","Set","prevSubscriptions","hook","TypeError","add","delete","sub","useHooks","initialSnapshot","onStoreChange","unsubscribe","getSnapshot","turboIds","setTurboIds","turboIdsFromSourceMap","contentSourceMap","nextTurboIds","documents","prevTurboIds","mergedTurboIds","sort","Context","Turbo","QuerySubscription","displayName","LiveStoreProvider$1","setError","revalidate","startRefresh","s","onLine","e4","n2","visibilityState","d","c","f","e3","useRevalidate","shouldRefetch","fulfilled","controller","AbortController","onFinally","async","signal","fetch","tag","filterResponse","aborted","values","effect","catch","name","finally","abort","snapshot","nextTurboIdsSnapshot","batch","setBatch","batchSet","flat","nextBatch","turboId","nextBatchSlice","prevBatch","lastMutatedDocumentId","setLastMutatedDocumentId","subscription","listen","events","effectFormat","includePreviousRevision","includeResult","update","effects","apply","cachedDocument","peek","patchDoc","_rev","patchedDocument","applyPatch","updatedKeys","updatedKey","lastDraftDocumentRev","setLastDraftDocumentRev","GetDocuments","missingIds","getDocuments","then","doc","useLiveQuery","initialData","queryParams2","defineStore","queryParams","parse","useQueryParams","store","serverSnapshot","getServerSnapshot","useSyncExternalStore","LoaderQueries","activePerspective","liveQueries","studioClient","useClient","apiVersion","clientConfig","withConfig","PanelsContext","div","Panel","defaultSize","minWidth","maxWidth","order","getPanelStyle","registerElement","unregisterElement","useLayoutEffect","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","el","useRef","current","usePanelId","activeResizer","drag","startDragging","stopDragging","isDragging","onMouseDown","event","nativeEvent","onDrag","onDragStop","blur","debounce","fn","timeout","timer","itemKey","getStoredItem","localStorage","getItem","getKeyForPanels","panels","panel","usePanelsStorage","widths","setItem","setStoredItem","setDebounced","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getPanelWidth","findIndex","toPrecision","getOffset","handleElement","initialOffset","initialHandleElementRect","clientX","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","a","b","validateWidths","widthsToValidate","total","remainingWidth","toFixed","abs","PanelsWrapper","Panels","panelsEl","setElements","setWidths","setActiveResizer","panelsRef","flexGrow","pointerEvents","prev","dragRef","innerWidth","dragOffset","panelAfter","panelBefore","resizerIndex","resizerRect","startX","elementsArr","resizer","resizeElement","acc","pageX","preventDefault","stopPropagation","prevWidths","nextWidths","delta","panelsState","initialDragState","initialWidths","pivotPanel","deltaApplied","localeCompare","numeric","getNextWidths","widthsChanged","prevWidth","storage","storedWidths","validatedStoredWidths","defaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","getDefaultWidths","resizeObserver","ResizeObserver","observe","disconnect","HoldEditState","PresentationNavigateProvider","navigate","PresentationNavigateContext","PresentationParamsProvider","PresentationParamsContext","PresentationProvider","IFrame","motion","PreviewLocationInput","basePath","useActiveWorkspace","activeWorkspace","onChange","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","currentTarget","handleKeyDown","absoluteValue","nextValue","handleBlur","resetButton","icon","ResetIcon","TextInput","clearButton","onBlur","onClear","onKeyDownCapture","zIndex","suffix","lineHeight","as","href","LaunchIcon","rel","target","MotionFlex","StyledSwitch","Switch","PERSPECTIVE_TITLES","previewDrafts","raw","PERSPECTIVE_TONES","PERSPECTIVE_ICONS","EditIcon","PublishIcon","DatabaseIcon","PreviewFrame","initialUrl","navigatorEnabled","onPathChange","overlayEnabled","setPerspective","toggleNavigator","toggleOverlay","loadersConnection","overlaysConnection","previewKitConnection","setMode","prefersReducedMotion","usePrefersReducedMotion","setDesktopMode","setMobileMode","loading","setLoading","timedOut","setTimedOut","refreshing","setRefreshing","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","previewLocationOrigin","location","handleRefresh","src","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","M","previewLocationRoute","URL","pathname","search","onIFrameLoad","MotionConfig","transition","duration","TooltipDelayGroupProvider","delay","shadow","position","gap","minHeight","Tooltip","content","fallbackPlacements","placement","portal","PanelLeftIcon","selected","whiteSpace","borderRadius","userSelect","margin","checked","RefreshIcon","MenuButton","button","iconRight","ChevronDownIcon","menu","Menu","MenuItem","pressed","createElement","opacity","CheckmarkIcon","popover","constrainSize","DesktopIcon","MobileDeviceIcon","cursor","AnimatePresence","initial","animate","exit","variants","errorVariants","background","inset","borderTop","boxShadow","spinnerVariants","sizes","Spinner","backdropFilter","iframeVariants","onLoad","desktop","mobile","scale","idle","reloading","active","parseId","rawId","segments","decodeURIComponent","split","parsePath","rawPath","studioPath","exec","Number","_key","urlStringToPath","parseRouterState","pruneObject","useParams","initialPreviewUrl","routerNavigate","setParamsState","rev","since","template","view","pathKey","instruction","comment","newParams","nextState","previewRef","previousPreview","pathToUrlString","fromString","searchParams","replace","usePreviewUrl","toolName","previewSearchParam","API_VERSION","workspace","deps","workspaceName","currentUser","useCurrentUser","resolveUUID","useSuspendCacheKeys","previewUrlSecret","enabled","secretLastExpiredAt","setSecretLastExpiredAt","suspend","createPreviewSecret","startTransition","expiresAt","getTime","Date","now","secret","usePreviewUrlSecret","resolvedUrl","resultUrl","restoredUrl","referrer","referrerUrl","resolvePreviewUrl","studioBasePath","Symbol","Navigator","component","NavigatorComponent","navigatorDisabled","exports","_previewUrl","components","tool","DEFAULT_TOOL_NAME","unstable_navigator","option","hostname","iframeRef","setChannel","setLiveQueries","documentsOnPage","setDocumentsOnPage","setState","changed","getKey","knownKeys","keys","perspective2","documentsOnPageMap","useDocumentsOnPage","setOverlayEnabled","navigatorProvided","setNavigatorEnabled","defaultValue","setValue","useLocalState","useProjectId","useDataset","idRef","preloadRefs","setPreloadRefs","p","concat","setOverlaysConnection","setLoadersConnection","setPreviewKitConnection","nextChannel","url","isInitialNavigation","nextDocumentId","nextPath","handlePreviewPath","handleDeskParams","setLiveDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}