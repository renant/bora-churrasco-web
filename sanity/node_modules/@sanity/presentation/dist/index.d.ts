/// <reference types="react" />

import type { ComponentType } from 'react'
import type { DocumentStore } from 'sanity'
import type { Observable } from 'rxjs'
import { Plugin as Plugin_2 } from 'sanity'
import type { PreviewUrlResolver } from '@sanity/preview-url-secret/define-preview-url'
import type { PreviewUrlResolverOptions } from '@sanity/preview-url-secret/define-preview-url'
import type { SanityClient } from 'sanity'

export declare interface DeskDocumentPaneParams {
  inspect?: string
  path?: string
  rev?: string
  since?: string
  template?: string
  view?: string
  pathKey?: string
  instruction?: string
  comment?: string
}

export declare interface DocumentLocation {
  title: string
  href: string
}

export declare type DocumentLocationResolver = (
  params: {
    id: string
    type: string
  },
  context: {
    documentStore: DocumentStore
  },
) =>
  | DocumentLocationsState
  | null
  | undefined
  | Observable<DocumentLocationsState | null | undefined>

export declare interface DocumentLocationsState {
  locations?: DocumentLocation[]
  message?: string
  tone?: 'positive' | 'caution' | 'critical'
}

export declare interface NavigatorOptions {
  minWidth?: number
  maxWidth?: number
  component: ComponentType
}

export declare type PresentationNavigateContextValue = (preview: string) => void

export declare interface PresentationParams
  extends PresentationStateParams,
    DeskDocumentPaneParams {
  id?: string
  preview?: string
  perspective?: string
}

export declare interface PresentationPluginOptions {
  devMode?: boolean | (() => boolean)
  icon?: ComponentType
  name?: string
  title?: string
  locate?: DocumentLocationResolver
  previewUrl: PreviewUrlOption
  components?: {
    unstable_navigator?: NavigatorOptions
  }
}

export declare interface PresentationStateParams {
  type?: string
  id?: string
  path?: string
}

export declare const presentationTool: Plugin_2<PresentationPluginOptions>

export declare type PreviewUrlOption =
  | string
  | PreviewUrlResolver<SanityClient>
  | PreviewUrlResolverOptions

export { PreviewUrlResolver }

export { PreviewUrlResolverOptions }

export declare type SetPresentationParams = (prev: PresentationParams) => void

export declare function usePresentationNavigate(): PresentationNavigateContextValue

export declare function usePresentationParams(): PresentationParams

export {}
