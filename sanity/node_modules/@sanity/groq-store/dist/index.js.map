{"version":3,"file":"index.js","sources":["../src/documentsCache.ts"],"sourcesContent":["import type { ClientPerspective, SanityDocument } from '@sanity/client'\nimport LRUCache from 'mnemonist/lru-cache'\n\nexport type { ClientPerspective, SanityDocument }\n\n/**\n * TODO add `ClientProjectId` to `@sanity/client`\n * @alpha\n */\nexport type ClientProjectId = string\n\n/**\n * TODO add `ClientDataset` to `@sanity/client`\n * @alpha\n */\nexport type ClientDataset = string\n\n/**\n * The only perspectives supported by the cache is `published` and `previewDrafts`.\n * @alpha\n */\nexport type DocumentCachePerspective = Extract<\n  ClientPerspective,\n  'published' | 'previewDrafts'\n>\n\n/**\n * @alpha\n */\nexport type DocumentId = string\n\n/**\n * @alpha\n */\nexport type DocumentCacheKey =\n  `${ClientProjectId}-${ClientDataset}-${DocumentCachePerspective}-${DocumentId}`\n\n/**\n * @alpha\n */\nexport const unstable__documentsCache = new LRUCache<\n  DocumentCacheKey,\n  SanityDocument\n>(1024)\n\n/**\n * @alpha\n */\nexport interface ClientConfigLike {\n  projectId: ClientProjectId\n  dataset: ClientDataset\n  perspective: DocumentCachePerspective\n}\n\n/**\n * @alpha\n */\nexport interface SanityDocumentLike {\n  _id: DocumentId\n}\n\n/**\n * @alpha\n */\nexport function unstable__getDocumentCacheKey(\n  config: ClientConfigLike,\n  document: SanityDocumentLike,\n): DocumentCacheKey {\n  const { projectId, dataset, perspective } = config\n  const { _id } = document\n  if (\n    ![projectId, dataset, perspective, _id].every(\n      (input) => typeof input === 'string' && input.length > 0,\n    )\n  ) {\n    throw new Error(\n      'Invalid document cache key, all inputs must be non-empty strings',\n      { cause: { config, document } },\n    )\n  }\n  if (perspective !== 'published' && perspective !== 'previewDrafts') {\n    throw new Error(\n      'Invalid document cache key, perspective must be \"published\" or \"previewDrafts\"',\n      { cause: { config, document } },\n    )\n  }\n  return `${projectId}-${dataset}-${perspective}-${_id}`\n}\n"],"names":["LRUCache","unstable__documentsCache","unstable__getDocumentCacheKey","config","document","projectId","dataset","perspective","_id","every","input","length","Error","cause"],"mappings":"OAwCaA,MAAA,sBAAA,MAAAC,EAA2B,IAAID,EAG1C,MAqBc,SAAAE,EACdC,EACAC,GAEA,MAAMC,UAAEA,EAAAC,QAAWA,EAASC,YAAAA,GAAgBJ,GACtCK,IAAEA,GAAQJ,EAChB,IACG,CAACC,EAAWC,EAASC,EAAaC,GAAKC,OACrCC,GAA2B,iBAAVA,GAAsBA,EAAMC,OAAS,IAGzD,MAAM,IAAIC,MACR,mEACA,CAAEC,MAAO,CAAEV,SAAQC,cAGnB,GAAgB,cAAhBG,GAA+C,kBAAhBA,EACjC,MAAM,IAAIK,MACR,iFACA,CAAEC,MAAO,CAAEV,SAAQC,cAGvB,SAAUC,KAAaC,KAAWC,KAAeC,GACnD,QAAAP,8BAAAC"}